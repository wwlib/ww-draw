{"version":3,"sources":["ww-drawing-history-data-translator.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;4CAIyC,oCAAoC;;;;4BACpD,kBAAkB;;;;qBACzB,SAAS;;;;IAErB,8BAA8B;AACrB,aADT,8BAA8B,GAClB;8BADZ,8BAA8B;;AAE5B,YAAI,CAAC,mBAAmB,GAAG,8CAAiC,EAAE,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;AACzF,YAAI,CAAC,YAAY,GAAG,GAAG,CAAC;KAC3B;;iBAJC,8BAA8B;;eAMH,uCAAC,WAAW,EACzC;AACI,gBAAI,OAAO,GAAG,8CAAiC,EAAE,CAAC,CAAC;AACnD,mBAAO,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC1E,mBAAO,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACxE,mBAAO,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC1E,mBAAO,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACpF,mBAAO,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC5E,mBAAO,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC9E,mBAAO,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAClF,mBAAO,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC9E,mBAAO,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACpF,gBAAI,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACzD,gBAAI,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;AAEzD,cAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,GAAC,EAAE,CAAC;AAC5B,cAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,GAAC,EAAE,CAAC;;AAE5B,gBAAI,MAAM,GAAG,0BAAa,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC;AACxE,mBAAO,CAAC,QAAQ,GAAG,uBAAU,EAAE,GAAG,MAAM,EAAE,EAAE,GAAG,MAAM,CAAC,CAAC;;AAEvD,mBAAO,OAAO,CAAA;SACjB;;;WA5BC,8BAA8B;;;qBA+BrB,8BAA8B","file":"ww-drawing-history-data-translator.js","sourcesContent":["/**\n * Created by andrew on 8/13/15.\n */\n\nimport WwDrawingHistoryBrushCommand from './ww-drawing-history-brush-command';\nimport WwDeviceInfo from './ww-device-info';\nimport Point from './point';\n\nclass WwDrawingHistoryDataTranslator {\n    constructor() {\n        this.previousCommandData = new WwDrawingHistoryBrushCommand(\"\",null,1,0,0,\"\",-1,0,-1,\"\");\n        this.drawingScale = 1.0;\n    }\n\n    generateCommandWithDataObject(data_object)\n    {\n        let command = new WwDrawingHistoryBrushCommand(\"\");\n        command.brushId = this.previousCommandData.updateBrushId(data_object.bid);\n        command.unitId = this.previousCommandData.updateUnitId(data_object.uid);\n        command.layerId = this.previousCommandData.updateLayerId(data_object.lid);\n        command.executionTime = this.previousCommandData.updateExecutionTime(data_object.t);\n        command.uintColor = this.previousCommandData.updateUintColor(data_object.c);\n        command.brushScale = this.previousCommandData.updateBrushScale(data_object.s);\n        command.brushBlendMode = this.previousCommandData.updateBlendMode(data_object.bm);\n        command.brushAlpha = this.previousCommandData.updateBrushAlpha(data_object.a);\n        command.brushRotation = this.previousCommandData.updateBrushRotation(data_object.r);\n        let _x = this.previousCommandData.updateX(data_object.x);\n        let _y = this.previousCommandData.updateY(data_object.y);\n\n        _x = Math.floor(_x * 10)/10;\n        _y = Math.floor(_y * 10)/10;\n\n        let _scale = WwDeviceInfo.instance.assetScaleFactor / this.drawingScale;//  1.0;  // 0.5 for iPad 2\n        command.location = new Point(_x * _scale, _y * _scale);\n\n        return command\n    }\n}\n\nexport default WwDrawingHistoryDataTranslator;\n\n/*\npackage org.wwlib.drawing\n{\nimport flash.geom.Point;\n\nimport org.wwlib.utils.WwDeviceInfo;\n\n    public class WwDrawingHistoryDataTranslator\n{\n    private var __previousCommandData:WwDrawingHistoryBrushCommand;\n    private var __drawingScale:Number;\n\n    public function WwDrawingHistoryDataTranslator()\n    {\n        __previousCommandData = new WwDrawingHistoryBrushCommand(\"\",null,1,0,0,\"\",-1,0,-1,\"\");\n        __drawingScale = 1.0;\n    }\n\n    public function generateCommandWithDataObject(data_object:Object):WwDrawingHistoryBrushCommand\n    {\n        var command:WwDrawingHistoryBrushCommand = new WwDrawingHistoryBrushCommand(\"\");\n        command.brushID = __previousCommandData.updateBrushId(data_object.bid);\n        command.unitID = __previousCommandData.updateUnitID(data_object.uid);\n        command.layerID = __previousCommandData.updateLayerID(data_object.lid);\n        command.executionTime = __previousCommandData.updateExecutionTime(data_object.t);\n        command.uintColor = __previousCommandData.updateUintColor(data_object.c);\n        command.brushScale = __previousCommandData.updateBrushScale(data_object.s);\n        command.brushBlendMode = __previousCommandData.updateBlendMode(data_object.bm);\n        command.brushAlpha = __previousCommandData.updateBrushAlpha(data_object.a);\n        command.brushRotation = __previousCommandData.updateBrushRotation(data_object.r);\n        var _x:Number = __previousCommandData.updateX(data_object.x);\n        var _y:Number = __previousCommandData.updateY(data_object.y);\n\n        _x = Math.floor(_x * 10)/10;\n        _y = Math.floor(_y * 10)/10;\n\n        var _scale:Number = WwDeviceInfo.instance.assetScaleFactor / __drawingScale;//  1.0;  // 0.5 for iPad 2\n        command.location = new Point(_x * _scale, _y * _scale);\n\n        return command\n    }\n\n    public function generateDataObjectWithCommand(command:WwDrawingHistoryBrushCommand):Object\n    {\n        var data_object:Object = {};\n\n        __previousCommandData.checkRedundancyOfBrushID(data_object, \"bid\", command.brushID);\n        __previousCommandData.checkRedundancyOfUnitID(data_object, \"uid\", command.unitID);\n        __previousCommandData.checkRedundancyOfLayerID(data_object, \"lid\", command.layerID);\n        __previousCommandData.checkRedundancyOfExecutionTime(data_object, \"t\", command.executionTime);\n        __previousCommandData.checkRedundancyOfUintColor(data_object, \"c\", command.uintColor);\n        __previousCommandData.checkRedundancyOfBrushScale(data_object, \"s\", command.brushScale);\n        __previousCommandData.checkRedundancyOfBrushBlendMode(data_object, \"bm\", command.brushBlendMode);\n        __previousCommandData.checkRedundancyOfBrushAlpha(data_object, \"a\", command.brushAlpha);\n        __previousCommandData.checkRedundancyOfBrushRotation(data_object, \"r\", command.brushRotation);\n        __previousCommandData.checkRedundancyOfGeneratedCommand(data_object, \"g\", command.generatedCommand);\n        __previousCommandData.checkRedundancyOfX(data_object, \"x\", command.location.x);\n        __previousCommandData.checkRedundancyOfY(data_object, \"y\", command.location.y);\n\n        return data_object;\n    }\n\n    public function get drawingScale():Number\n    {\n        return __drawingScale;\n    }\n\n    public function set drawingScale(value:Number):void\n    {\n        __drawingScale = value;\n    }\n\n\n}\n}\n*/"],"sourceRoot":"/source/"}