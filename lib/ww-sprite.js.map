{"version":3,"sources":["ww-sprite.js"],"names":[],"mappings":"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","file":"ww-sprite.js","sourcesContent":["/**\n * Created by andrew on 7/7/15.\n */\n\n/**\n * Adds image loading, crude debugging and other generally useful functionality...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nclass WwSprite {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = 0;\n        this.height = 0;\n\n        this.sourceX = 0;\n        this.sourceY = 0;\n\n        this.img = {};\n        this.bmp = {};\n        //this.debug:WwDebug = WwDebug.instance;\n        this.scaleFactor = WwSprite.BASE_SCALE_FACTOR;\n        this.url = \"\";\n\n        this._onReadyCallback = null;\n    }\n\n    toString() {\n        return `WwSprite: (${this.x}, ${this.y}): url: ${this.url}`;\n    }\n\n    loadImageWithURL(url) {\n        this.loadImageWithURLAndCallback(url, this.onImageLoaded);\n    }\n\n    loadImageWithURLAndCallback(url, callback) {\n        this.log(`WwSprite: load: ${url}, ${callback}`);\n\n        this.url = url;\n        this._onReadyCallback = callback;\n\n        if ((this.url != null) && (this.url != \"\")) {\n            this.url = url;\n            var temp_img = new Image();\n\n            temp_img.onload = (e => {\n                console.log(`Sprite: onLoad: ${e}`);\n                this.img = temp_img;\n                this.width = temp_img.width;\n                this.height = temp_img.height;\n\n                this.onReady();\n            });\n\n            temp_img.src = url;\n        } else {\n            this.onReady();\n        }\n    }\n\n    onImageLoaded(img) {\n        this.log(\"onImageLoaded: \"+ this.url);\n        //__bmp = event.target.content as Bitmap;\n        //removeChild(__img);\n        //__img = Image.fromBitmap(__bmp);\n        //resetScale();\n        //__img.alpha = 0.5;\n        //addChild(__img);\n        //__bmp = null;\n        this.onReady();\n    }\n\n    set onReadyCallback(callback)\n    {\n        this._onReadyCallback = callback;\n    }\n\n    // Override this\n    onReady()\n    {\n        this.log(`onReady:  ${this.url}`);\n        if (this._onReadyCallback != null)\n        {\n            this._onReadyCallback(this);\n        }\n\n        this._onReadyCallback = null;\n    }\n\n    draw(context) {\n\n        if (this.img) {\n            context.drawImage(\n                this.img,\n                this.sourceX,\n                this.sourceY,\n                this.width,\n                this.height,\n                this.x,\n                this.y,\n                this.width,\n                this.height\n            );\n        } else {\n            this.fill(context);\n        }\n    }\n\n    fill(context) {\n        context.fillStyle = \"#999999\";\n        context.fillRect(this.x, this.y, this.width, this.height);\n    }\n\n\n    log(msg) {\n        console.log(`WwSprite: ${msg}`);\n    }\n}\n\nWwSprite.BASE_SCALE_FACTOR = 0.5;\nWwSprite.SPRITE_STAGE = {};\n\n\nexport default WwSprite;\n\n\n/*\n package org.wwlib.starling\n {\n\n import flash.display.Bitmap;\n import flash.display.Loader;\n import flash.display.MovieClip;\n import flash.events.Event;\n import flash.net.URLRequest;\n import flash.system.ImageDecodingPolicy;\n import flash.system.LoaderContext;\n\n import org.wwlib.utils.WwDebug;\n\n import starling.display.Image;\n import starling.display.Sprite;\n\n\n public class WwSprite extends Sprite\n {\n public static var __baseScaleFactor:Number = 0.5;\n public static var FLASH_STAGE:flash.display.MovieClip;\n\n protected var __img:Image;\n protected var __x:int;\n protected var __y:int;\n protected var __bmp:Bitmap;\n protected var __debug:WwDebug = WwDebug.instance;\n protected var __scaleFactor:Number = WwSprite.__baseScaleFactor;\n protected var __url:String;\n\n protected var __onReadyCallback:Function;\n\n public function WwSprite()\n {\n\n }\n\n public function loadImage(url:String):void\n {\n __url = url;\n if ((__url != null) && (__url != \"\"))\n {\n // create a LoaderContext\n var loaderContext:LoaderContext = new LoaderContext();\n // specify async decoding\n loaderContext.imageDecodingPolicy = ImageDecodingPolicy.ON_LOAD;\n // create a Loader\n var loader:Loader = new Loader();\n // inform the Loader\n loader.contentLoaderInfo.addEventListener(Event.COMPLETE,onImageLoaded);\n loader.load( new URLRequest(url), loaderContext );\n }\n else\n {\n onReady();\n }\n }\n\n protected function onImageLoaded(event:Event):void\n {\n //__debug.msg(\"onImageLoaded: \"+ __url);\n __bmp = event.target.content as Bitmap;\n removeChild(__img);\n __img = Image.fromBitmap(__bmp);\n resetScale();\n //__img.alpha = 0.5;\n addChild(__img);\n __bmp = null;\n onReady();\n }\n\n public function resetScale():void\n {\n __img.scaleX = __scaleFactor;\n __img.scaleY = __scaleFactor;\n }\n\n // Override this\n public function onReady():void\n {\n //__debug.msg(\"onReady: \" + __url);\n if (__onReadyCallback != null)\n {\n __onReadyCallback(__url);\n }\n }\n\n public function set image(img:Image):void\n {\n __img = img;\n }\n\n public function get image():Image\n {\n return __img;\n }\n\n public function get url():String\n {\n return __url;\n }\n\n public function set onReadyCallback(f:Function):void\n {\n __onReadyCallback = f;\n }\n\n public function clearImg():void\n {\n removeChild(__img);\n __img = null;\n\n }\n\n public override function dispose():void\n {\n removeChild(__img);\n __img = null;\n super.dispose();\n }\n }\n\n }\n */"],"sourceRoot":"/source/"}