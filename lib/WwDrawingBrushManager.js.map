{"version":3,"sources":["WwDrawingBrushManager.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;uBAUmB,YAAY;;;;IAEzB,qBAAqB;AACZ,aADT,qBAAqB,GACT;8BADZ,qBAAqB;KAEtB;;iBAFC,qBAAqB;;aAIJ,eAAG;AAClB,gBAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE;AAClC,qCAAqB,CAAC,SAAS,GAAG,IAAI,qBAAqB,EAAE,CAAC;aACjE;;AAED,mBAAO,qBAAqB,CAAC,SAAS,CAAC;SAC1C;;;WAVC,qBAAqB;;;AAc3B,qBAAqB,CAAC,SAAS,GAAG,IAAI,CAAC;;qBAExB,qBAAqB","file":"WwDrawingBrushManager.js","sourcesContent":["/**\n * Created by andrew on 8/13/15.\n */\n\n/**\n * ...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nimport WwBrush from'./ww-brush';\n\nclass WwDrawingBrushManager {\n    constructor() {\n    }\n\n    static get instance() {\n        if (!WwDrawingBrushManager._instance) {\n            WwDrawingBrushManager._instance = new WwDrawingBrushManager();\n        }\n\n        return WwDrawingBrushManager._instance;\n    }\n\n}\n\nWwDrawingBrushManager._instance = null;\n\nexport default WwDrawingBrushManager;\n\n\n/*\n\n package org.wwlib.drawing\n {\n import flash.utils.Dictionary;\n\n import org.wwlib.starling.WwBrush;\n import org.wwlib.utils.WwDebug;\n\n\npublic class WwDrawingBrushManager\n{\n    private static var __instance:WwDrawingBrushManager;\n\n    private var __debug:WwDebug;\n    private var __brushIDArray:Array;\n    private var __brushURLs:Dictionary;\n    private var __brushes:Dictionary;\n    //private var __brushBitmaps:Dictionary;\n\n    //private var __debugBrush:WwBrush;\n\n\n    public function WwDrawingBrushManager(enforcer:SingletonEnforcer)\n    {\n        if (!(enforcer is SingletonEnforcer))\n        {\n            throw new ArgumentError(\"QcColoringBrushManager cannot be directly instantiated!\");\n        }\n\n        __debug = WwDebug.instance;\n    }\n\n\n    public static function init():WwDrawingBrushManager\n    {\n        //NOTE: Brush Manager needs to re-initialize whenever a new Starling context is created\n\n        if (__instance != null)\n        {\n            __instance.dispose();\n        }\n\n        __instance = new WwDrawingBrushManager(new SingletonEnforcer());\n        __instance.setup();\n\n        return __instance;\n    }\n\n    public static function get instance(): WwDrawingBrushManager\n    {\n        return __instance;\n    }\n\n    private function setup():void\n    {\n        __brushIDArray = new Array();\n        __brushURLs = new Dictionary();\n        __brushes = new Dictionary();\n\n        __brushIDArray[0] = \"hard\";\n        __brushIDArray[1] = \"soft\";\n        __brushIDArray[2] = \"crayon\";\n        __brushIDArray[3] = \"calligraphy\";\n        __brushIDArray[4] = \"x\";\n        __brushIDArray[5] = \"crosshairs\";\n        __brushIDArray[6] = \"arrow\";\n\n        __brushURLs[\"hard\"] = \"assets/brushes/brush_hard.png\";\n        __brushURLs[\"soft\"] = \"assets/brushes/brush_soft.png\";\n        __brushURLs[\"crayon\"] = \"assets/brushes/brush_crayon.png\";\n        __brushURLs[\"calligraphy\"] = \"assets/brushes/brush_calligraphy.png\";\n        __brushURLs[\"x\"] = \"assets/brushes/brush_x.png\";\n        __brushURLs[\"crosshairs\"] = \"assets/brushes/brush_crosshairs.png\";\n        __brushURLs[\"arrow\"] = \"assets/brushes/brush_arrow.png\"; //,interval_dash\";\n\n        var _key:Object;\n\n        for (_key in __brushURLs)\n        {\n            var _brush:WwBrush = new WwBrush();\n            _brush.loadImage(__brushURLs[_key]);\n            __brushes[_key] = _brush;\n            //__debug.msg(\"BrushManager: \" + _key + \":\" + __brushes[_key] + \", \" + __brushURLs[_key], \"1\");\n        }\n    }\n\n    //Moved to BrushManager from WwDrawingtarling 7/2/2015\n\n\n    public function getBrushFromBrushID(_id:String):WwBrush\n    {\n        return __brushes[_id];\n    }\n\n    public function getBrushIDWithIndex(index:int):String\n    {\n        return __brushIDArray[index];\n    }\n\n    public function get brushIDs():Array\n    {\n        return __brushIDArray;\n    }\n\n    public function get brushURLs():Dictionary\n    {\n        return __brushURLs;\n    }\n\n    public function dispose():void\n    {\n        var brush:WwBrush;\n\n        for each (brush in __brushes)\n        {\n            brush.dispose();\n        }\n\n        __brushIDArray = null;\n        __brushURLs = null;\n        __brushes = null;\n    }\n\n\n//\t\tpublic function get brushBitmaps():Dictionary\n//\t\t{\n//\t\t\treturn __brushBitmaps;\n//\t\t}\n\n\n}\n}\n\n\n */"],"sourceRoot":"/source/"}