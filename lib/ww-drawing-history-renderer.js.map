{"version":3,"sources":["ww-drawing-history-renderer.js"],"names":[],"mappings":"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","file":"ww-drawing-history-renderer.js","sourcesContent":["/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\nimport WwDrawingHistoryBrushCommand from './ww-drawing-history-brush-command';\nimport Point from './point.js';\nimport Rect from './rect';\n\nclass WwDrawingHistoryRenderer {\n    constructor(history, context, bounding_rect=null, center_drawing=false, scale=null, start_time=0, end_time=0) {\n        this.history = history;\n        this.context = context;\n        this.boundingRect = bounding_rect;\n        if (this.boundingRect) {\n            this.x = this.boundingRect.left;\n            this.y = this.boundingRect.top;\n            this.width = this.boundingRect.width;\n            this.height = this.boundingRect.height;\n        }\n        this.centerDrawing = center_drawing;\n        this.startTime = start_time;\n        this.endTime = end_time;\n        this.time = this.startTime;\n\n        this.mergedCommandsUnit = this.history.concatAllCommands();\n        this.mergedCommandsUnit.shiftOriginToMinXY();\n        this.mergedCommandsUnit.resetBoundingRect();\n\n        console.log(`history bounds: ${this.history.boundingRect.toString()}`);\n        console.log(`merged unit bounds: ${this.mergedCommandsUnit.boundingRect.toString()}`);\n        //console.log(`${this.mergedCommandsUnit.toString()}`);\n\n        if (scale) {\n            this.scale = scale;\n        } else {\n            if (this.boundingRect) {\n                if (this.mergedCommandsUnit.boundingRect.width > this.mergedCommandsUnit.boundingRect.height) {\n                    if (this.boundingRect.width < this.mergedCommandsUnit.boundingRect.width) {\n                        this.scale = this.boundingRect.width / this.mergedCommandsUnit.boundingRect.width;\n                    }\n                } else {\n                    if (this.boundingRect.height < this.mergedCommandsUnit.boundingRect.height) {\n                        this.scale = this.boundingRect.height / this.mergedCommandsUnit.boundingRect.height;\n                    }\n                }\n            } else {\n                this.scale = 1.0;\n            }\n        }\n\n        this.offset = new Point();\n\n        if (this.boundingRect) {\n            console.log(` updating offset: `);\n            this.offset = new Point(this.boundingRect.left - this.mergedCommandsUnit.boundingRect.left, this.boundingRect.top - this.mergedCommandsUnit.boundingRect.top);\n\n            if (this.centerDrawing) {\n                let scaled_drawing_width = this.mergedCommandsUnit.boundingRect.width * this.scale;\n                let center_x_offset = (this.boundingRect.width - scaled_drawing_width) / 2;\n                let scaled_drawing_height = this.mergedCommandsUnit.boundingRect.height * this.scale;\n                let center_y_offset = (this.boundingRect.height - scaled_drawing_height) / 2;\n                console.log(` center_x_offset: ${center_x_offset}, ${this.boundingRect.width} - ${scaled_drawing_width}`);\n                console.log(` center_y_offset: ${center_y_offset}, ${this.boundingRect.width} - ${scaled_drawing_height}`);\n                this.offset.x += center_x_offset;\n                this.offset.y += center_y_offset;\n            }\n        }\n\n\n        console.log(` bounding rect: ${this.boundingRect.toString()}`);\n        console.log(` merged unit bounding rect: ${this.mergedCommandsUnit.boundingRect.toString()}`);\n        console.log(` offset: ${this.offset.toString()}`);\n\n    }\n\n    get ended() {\n        return !this.mergedCommandsUnit.hasNext();\n    }\n\n    renderCommand(command) {\n\n        command.offset = this.offset;\n        command.scale = this.scale;\n        if (command.prevCommand) {\n            let draw_distance = command.lineLength - command.prevCommand.lineLength;\n            let draw_steps = (draw_distance / 2.0) + 1.0;\n\n            for (let i = draw_steps; i > 0; i--) {\n                let interpolationFactor = i / draw_steps;\n\n                let temp_command = WwDrawingHistoryBrushCommand.clone(command);\n\n                let temp_point = Point.interpolate(command.prevCommand.location, command.location, interpolationFactor);\n                temp_command.location = temp_point;\n                temp_command.generatedCommand = true;\n                this.brush = temp_command.brush;\n                if (this.brush) {\n                    this.brush.draw(this.context);\n                }\n            }\n        } else { //DOT\n            this.brush = command.brush; //WwDrawingBrushManager.instance.getBrushFromBrushId(command.brushId);\n            if (this.brush) {\n                this.brush.draw(this.context);\n            }\n        }\n    }\n\n    renderHistory() {\n        this.mergedCommandsUnit.commands.forEach(command => {\n            this.renderCommand(command);\n        });\n    }\n\n    renderHistoryWithDuration(duration) {\n        //console.log(`renderHistoryWithDuration: ${duration}, time: ${this.time}`);\n        this.renderHistoryWithTimeRange(this.time, this.time + duration);\n    }\n\n    renderHistoryWithTimeRange(start_time, end_time) {\n\n        while (this.mergedCommandsUnit.hasNextInTimeRange(start_time, end_time)) {\n            this.renderCommand(this.mergedCommandsUnit.nextInTimeRange(start_time, end_time));\n        }\n\n        this.time = end_time;\n    }\n}\n\nexport default WwDrawingHistoryRenderer;\n"],"sourceRoot":"/source/"}