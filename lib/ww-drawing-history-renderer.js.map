{"version":3,"sources":["ww-drawing-history-renderer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;4CAMyC,oCAAoC;;;;uBAC3D,YAAY;;;;IAExB,wBAAwB;AACf,aADT,wBAAwB,CACd,OAAO,EAAE,OAAO,EAA4B;YAA1B,UAAU,gCAAC,CAAC;YAAE,QAAQ,gCAAC,CAAC;;8BADpD,wBAAwB;;AAEtB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAI,CAAC,SAAS,GAAG,UAAU,CAAC;AAC5B,YAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;AACxB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;;AAE3B,YAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;KAC9D;;iBATC,wBAAwB;;eAeb,uBAAC,OAAO,EAAE;;AAEnB,gBAAI,OAAO,CAAC,WAAW,EAAE;AACrB,oBAAI,aAAa,GAAG,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC;AACxE,oBAAI,UAAU,GAAG,AAAC,aAAa,GAAG,GAAG,GAAI,GAAG,CAAC;;AAE7C,qBAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACjC,wBAAI,mBAAmB,GAAG,CAAC,GAAG,UAAU,CAAC;;AAEzC,wBAAI,YAAY,GAAG,0CAA6B,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/D,wBAAI,UAAU,GAAG,qBAAM,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;AACxG,gCAAY,CAAC,QAAQ,GAAG,UAAU,CAAC;AACnC,gCAAY,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC,wBAAI,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;AAChC,wBAAI,IAAI,CAAC,KAAK,EAAE;AACZ,4BAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACjC;iBACJ;aACJ,MAAM;;AACH,oBAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAC3B,oBAAI,IAAI,CAAC,KAAK,EAAE;AACZ,wBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACjC;aACJ;SACJ;;;eAEY,yBAAG;;;AACZ,gBAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;AAChD,sBAAK,aAAa,CAAC,OAAO,CAAC,CAAC;aAC/B,CAAC,CAAC;SACN;;;eAEwB,mCAAC,QAAQ,EAAE;;AAEhC,gBAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;SACpE;;;eAEyB,oCAAC,UAAU,EAAE,QAAQ,EAAE;;AAE7C,mBAAO,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE;AACrE,oBAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;aACrF;;AAED,gBAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;SACxB;;;aAhDQ,eAAG;AACR,mBAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;SAC7C;;;WAbC,wBAAwB;;;qBA8Df,wBAAwB","file":"ww-drawing-history-renderer.js","sourcesContent":["/**\n * Created by andrew on 8/13/15.\n */\n\n//import WwDrawingBrushManager from './ww-drawing-brush-manager';\n\nimport WwDrawingHistoryBrushCommand from './ww-drawing-history-brush-command';\nimport Point from './point.js';\n\nclass WwDrawingHistoryRenderer {\n    constructor(history, context, start_time=0, end_time=0) {\n        this.history = history;\n        this.context = context;\n        this.startTime = start_time;\n        this.endTime = end_time;\n        this.time = this.startTime;\n\n        this.mergedCommandsUnit = this.history.concatAllCommands();\n    }\n\n    get ended() {\n        return !this.mergedCommandsUnit.hasNext();\n    }\n\n    renderCommand(command) {\n\n        if (command.prevCommand) {\n            let draw_distance = command.lineLength - command.prevCommand.lineLength;\n            let draw_steps = (draw_distance / 2.0) + 1.0;\n\n            for (let i = draw_steps; i > 0; i--) {\n                let interpolationFactor = i / draw_steps;\n\n                let temp_command = WwDrawingHistoryBrushCommand.clone(command);\n                let temp_point = Point.interpolate(command.prevCommand.location, command.location, interpolationFactor);\n                temp_command.location = temp_point;\n                temp_command.generatedCommand = true;\n                this.brush = temp_command.brush;\n                if (this.brush) {\n                    this.brush.draw(this.context);\n                }\n            }\n        } else { //DOT\n            this.brush = command.brush; //WwDrawingBrushManager.instance.getBrushFromBrushId(command.brushId);\n            if (this.brush) {\n                this.brush.draw(this.context);\n            }\n        }\n    }\n\n    renderHistory() {\n        this.mergedCommandsUnit.commands.forEach(command => {\n            this.renderCommand(command);\n        });\n    }\n\n    renderHistoryWithDuration(duration) {\n        //console.log(`renderHistoryWithDuration: ${duration}, time: ${this.time}`);\n        this.renderHistoryWithTimeRange(this.time, this.time + duration);\n    }\n\n    renderHistoryWithTimeRange(start_time, end_time) {\n\n        while (this.mergedCommandsUnit.hasNextInTimeRange(start_time, end_time)) {\n            this.renderCommand(this.mergedCommandsUnit.nextInTimeRange(start_time, end_time));\n        }\n\n        this.time = end_time;\n    }\n}\n\nexport default WwDrawingHistoryRenderer;\n"],"sourceRoot":"/source/"}