{"version":3,"sources":["demo-pixijs.js"],"names":[],"mappings":";;;;;;;;qBAIkB,SAAS;;;;oBACV,QAAQ;;;;wBACJ,aAAa;;;;wBACb,aAAa;;;;uBACd,YAAY;;;;4CACS,oCAAoC;;;;4BACpD,kBAAkB;;;;oCACV,2BAA2B;;;;qCAC1B,4BAA4B;;;;gCACjC,sBAAsB;;;;wCACd,+BAA+B;;;;sCACjC,6BAA6B;;;;0CAE3C,kCAAkC;;;;oBACtC,MAAM;;;;AAEvB,IAAI,cAAc,GAAG,wCAAS,IAAI,CAAC,MAAM,CAAC;AAC1C,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,cAAc,CAAC,CAAC;AAC/D,IAAI,gBAAgB,GAAG,wCAAS,IAAI,CAAC,aAAa,CAAC,CAAC;AACpD,IAAI,YAAY,GAAG,kBAAK,IAAI,CAAC,SAAS,EAAE,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;;AAEhF,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;;AAE1B,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAErC,IAAI,eAAe,YAAA;IAAE,KAAK,YAAA;IAAE,aAAa,YAAA;IAAE,QAAQ,YAAA,CAAC;AACpD,IAAI,gBAAgB,YAAA,CAAC;;AAErB,IAAI,CAAC,IAAI,EAAE;AACP,WAAO,CAAC,GAAG,4DAA0D,CAAC;CACzE,MAAM;;AAEH,mBAAe,GAAG,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,GAAG,EAAE;AACrD,YAAI,EAAE,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC;AAC5C,uBAAe,EAAE,QAAQ;AACzB,iBAAS,EAAE,IAAI;KAClB,CAAC,CAAC;;AAEH,SAAK,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;;AAE7B,iBAAa,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;;AAEnE,YAAQ,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AAC1C,SAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;AAEzB,uCAAsB,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;CAClE;;AAED,SAAS,eAAe,CAAC,OAAO,EAAE;AAC9B,WAAO,CAAC,GAAG,oBAAoB,CAAC;AAChC,WAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;AAErB,QAAI,aAAa,GAAG,yCAA4B,CAAC;AACjD,iBAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;;AAEzC,QAAI,WAAW,GAAG,sBAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;AAE/C,oBAAgB,GAAG,0CAA6B,aAAa,CAAC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;;AAEzG,UAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;CACxC;;AAED,SAAS,MAAM,GAAG;AACd,oBAAgB,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;AAC/C,mBAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;AAE9B,QAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;AACzB,cAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;KACxC;CACJ","file":"demo-pixijs.js","sourcesContent":["/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\nimport Point from './point';\nimport Rect from './rect';\nimport getTimer from './get-timer';\nimport WwSprite from './ww-sprite';\nimport WwBrush from './ww-brush';\nimport WwDrawingHistoryBrushCommand from './ww-drawing-history-brush-command';\nimport WwDeviceInfo from './ww-device-info';\nimport WwDrawingHistoryUnit from './ww-drawing-history-unit';\nimport WwDrawingBrushManager from './ww-drawing-brush-manager';\nimport WwDrawingHistory from './ww-drawing-history';\nimport WwDrawingHistoryRenderer from './ww-drawing-history-renderer';\nimport WwDrawingHistoryLoader from './ww-drawing-history-loader';\n\nimport drawings from '../images/drawings/drawings.json';\nimport path from 'path';\n\nlet drawings_count = drawings.list.length;\nlet drawing_index = Math.floor(Math.random() * drawings_count);\nlet drawing_filename = drawings.list[drawing_index];\nlet drawing_path = path.join(__dirname, '../images/drawings', drawing_filename);\n\nconsole.log(drawing_path);\n\nlet TestData = require(drawing_path);\n\nlet pixijs_renderer, stage, renderTexture, rtSprite;\nlet drawing_renderer;\n\nif (!PIXI) {\n    console.log(`test-pixijs.js: PIXI must be defined in 'pixijs' mode!`);\n} else {\n\n    pixijs_renderer = new PIXI.autoDetectRenderer(1280, 720, {\n        view: document.getElementById(\"test-canvas\"),\n        backgroundColor: 0x000000,\n        antialias: true\n    });\n\n    stage = new PIXI.Container();\n\n    renderTexture = new PIXI.RenderTexture(pixijs_renderer, 1280, 720);\n\n    rtSprite = new PIXI.Sprite(renderTexture);\n    stage.addChild(rtSprite);\n\n    WwDrawingBrushManager.instance.init(onBrushesLoaded, 'pixijs');\n}\n\nfunction onBrushesLoaded(brushes) {\n    console.log(`onBrushesLoaded:`);\n    console.log(brushes);\n\n    let historyLoader = new WwDrawingHistoryLoader();\n    historyLoader.parseDrawingData(TestData);\n\n    let render_rect = new Rect(110, 390, 500, 500);\n\n    drawing_renderer = new WwDrawingHistoryRenderer(historyLoader.history, renderTexture, render_rect, true);\n\n    window.requestAnimationFrame(update);\n}\n\nfunction update() {\n    drawing_renderer.renderHistoryWithDuration(33); //render one 33ms segment of the drawing each frame\n    pixijs_renderer.render(stage);\n\n    if (!drawing_renderer.ended) {\n        window.requestAnimationFrame(update);\n    }\n}"],"sourceRoot":"/source/"}