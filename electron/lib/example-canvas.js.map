{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./example-src/example-canvas.ts","webpack:///./node_modules/graceful-fs/fs.js","webpack:///./node_modules/graceful-fs/graceful-fs.js","webpack:///./node_modules/graceful-fs/legacy-streams.js","webpack:///./node_modules/graceful-fs/polyfills.js","webpack:///./node_modules/jsonfile/index.js","webpack:///./src/GetTimer.ts","webpack:///./src/Point.ts","webpack:///./src/Rect.ts","webpack:///./src/WwBrush.ts","webpack:///./src/WwDeviceInfo.ts","webpack:///./src/WwDrawingBrushManager.ts","webpack:///./src/WwDrawingHistory.ts","webpack:///./src/WwDrawingHistoryBrushCommand.ts","webpack:///./src/WwDrawingHistoryDataTranslator.ts","webpack:///./src/WwDrawingHistoryLoader.ts","webpack:///./src/WwDrawingHistoryRenderer.ts","webpack:///./src/WwDrawingHistoryUnit.ts","webpack:///./src/WwRenderTextureContext.ts","webpack:///./src/WwSprite.ts","webpack:///./src/index.ts","webpack:///./src/vector2.ts","webpack:///external \"assert\"","webpack:///external \"constants\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"stream\"","webpack:///external \"util\""],"names":[],"mappings":"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AC,uBAAuB,KAAK,EAAE,CAAC,CAAC;IAC5C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC;;;;;;;;;;;;;AC5FD;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,iCAAiC;AACjC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrQA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;;AAEA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;;AAEA;;AAEA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrHA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,yCAAyC;AACzC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,4CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"example-canvas.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssmbly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./example-src/example-canvas.ts\");\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\nimport * as WwDraw from '../src/index';\nconst path = require('path');\nconst jsonfile = require('jsonfile');\n\nconst TestData = jsonfile.readFileSync(path.resolve('images/drawings/flower.json'));\n\nlet canvas: any = document.getElementById(\"example-canvas\");\nlet ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\nctx.clearRect(0, 0, canvas.width, canvas.height);\n\nconsole.log(`getTimer: ${WwDraw.getTimer()}`);\nconsole.log(`point: ${new WwDraw.Point().toString()}`);\n\nlet test_sprite: WwDraw.WwSprite = new WwDraw.WwSprite(1, 2);\nconsole.log(`WwSprite: ${test_sprite}`);\ntest_sprite.loadImageWithURLAndCallback('./images/player.png', onSpriteImageLoaded);\n\nlet bg_sprite: WwDraw.WwSprite = new WwDraw.WwSprite(0, 0);\nconsole.log(`WwSprite: ${bg_sprite}`);\nbg_sprite.loadImageWithURLAndCallback('./images/bg_500.png', onBGImageLoaded);\n\nlet test_brush: WwDraw.WwBrush = new WwDraw.WwBrush();\nconsole.log(`WwBrush: ${test_brush}`);\ntest_brush.loadImageWithURLAndCallback('./images/brushes/circle.png', onBrushImageLoaded);\n\nlet test_point1: WwDraw.Point = new WwDraw.Point(0,0);\nlet test_point2: WwDraw.Point = new WwDraw.Point(1,1);\nconsole.log(`Distance between points: ${WwDraw.Point.distance(test_point1,test_point2)}`);\n\nlet device_info: WwDraw.WwDeviceInfo = WwDraw.WwDeviceInfo.instance;\nconsole.log(`DeviceInfo: AssetScaleFactor: ${device_info.assetScaleFactor}`);\n\nlet brush_command: WwDraw.WwDrawingHistoryBrushCommand = new WwDraw.WwDrawingHistoryBrushCommand('hard', new WwDraw.Point(100, 100),  WwDraw.getTimer());\nconsole.log(`${brush_command.toString()}`);\n\nlet drawing_history_unit: WwDraw.WwDrawingHistoryUnit = new WwDraw.WwDrawingHistoryUnit();\nlet test_unit: WwDraw.WwDrawingHistoryUnit = TestData.units[0];\nlet test_commands: WwDraw.WwDrawingHistoryBrushCommand[] = test_unit.commands;\nlet base_command: WwDraw.WwDrawingHistoryBrushCommand = new WwDraw.WwDrawingHistoryBrushCommand('hard', new WwDraw.Point(0,0));\ntest_commands.forEach((data_object: any) => {\n    let command: WwDraw.WwDrawingHistoryBrushCommand = WwDraw.WwDrawingHistoryBrushCommand.clone(base_command, data_object);\n\n    drawing_history_unit.addCommand(command);\n    base_command = command;\n});\n//console.log(drawing_history_unit.toString());\n\nWwDraw.WwDrawingBrushManager.instance.init(onBrushesLoaded);\n\nlet drawing_renderer: WwDraw.WwDrawingHistoryRenderer;\n\nfunction onBrushesLoaded(brushes) {\n    console.log(`onBrushesLoaded:`);\n    console.log(brushes);\n\n    let historyLoader: any = new WwDraw.WwDrawingHistoryLoader();\n    historyLoader.parseDrawingData(TestData);\n\n    let render_rect: WwDraw.Rect = new WwDraw.Rect(110, 390, 500, 500);\n\n    drawing_renderer = new WwDraw.WwDrawingHistoryRenderer(historyLoader.history, ctx, render_rect, true, 0.8);\n\n    window.requestAnimationFrame(update);\n}\n\nfunction update() {\n    drawing_renderer.renderHistoryWithDuration(33); //render one 33ms segment of the drawing each frame\n\n    if (!drawing_renderer.ended) {\n        window.requestAnimationFrame(update);\n    }\n}\n\nfunction onSpriteImageLoaded(sprite) {\n    console.log(`onSpriteImageLoaded: ${sprite}`);\n    sprite.draw(ctx);\n}\n\nfunction onBGImageLoaded(sprite) {\n    console.log(`onBGImageLoaded: ${sprite}`);\n    sprite.x = 390;\n    sprite.y = 110;\n    sprite.draw(ctx);\n}\n\nfunction onBrushImageLoaded(brush) {\n    console.log(`onBrushImageLoaded: ${brush}`);\n    brush.draw(ctx);\n}\n","'use strict'\n\nvar fs = require('fs')\n\nmodule.exports = clone(fs)\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar queue = []\n\nvar util = require('util')\n\nfunction noop () {}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\nif (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n  process.on('exit', function() {\n    debug(queue)\n    require('assert').equal(queue.length, 0)\n  })\n}\n\nmodule.exports = patch(require('./fs.js'))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH) {\n  module.exports = patch(fs)\n}\n\n// Always patch fs.close/closeSync, because we want to\n// retry() whenever a close happens *anywhere* in the program.\n// This is essential when multiple graceful-fs instances are\n// in play at the same time.\nmodule.exports.close =\nfs.close = (function (fs$close) { return function (fd, cb) {\n  return fs$close.call(fs, fd, function (err) {\n    if (!err)\n      retry()\n\n    if (typeof cb === 'function')\n      cb.apply(this, arguments)\n  })\n}})(fs.close)\n\nmodule.exports.closeSync =\nfs.closeSync = (function (fs$closeSync) { return function (fd) {\n  // Note that graceful-fs also retries when fs.closeSync() fails.\n  // Looks like a bug to me, although it's probably a harmless one.\n  var rval = fs$closeSync.apply(fs, arguments)\n  retry()\n  return rval\n}})(fs.closeSync)\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n  fs.FileReadStream = ReadStream;  // Legacy name.\n  fs.FileWriteStream = WriteStream;  // Legacy name.\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n  ReadStream.prototype.open = ReadStream$open\n\n  var fs$WriteStream = fs.WriteStream\n  WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n  WriteStream.prototype.open = WriteStream$open\n\n  fs.ReadStream = ReadStream\n  fs.WriteStream = WriteStream\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  queue.push(elem)\n}\n\nfunction retry () {\n  var elem = queue.shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","var fs = require('./fs.js')\nvar constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {\n    var callback\n    if (callback_ && typeof callback_ === 'function') {\n      var eagCounter = 0\n      callback = function (er, _, __) {\n        if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n        }\n        callback_.apply(this, arguments)\n      }\n    }\n    return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n  }})(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n}\n\nfunction patchLchmod (fs) {\n  fs.lchmod = function (path, mode, callback) {\n    fs.open( path\n           , constants.O_WRONLY | constants.O_SYMLINK\n           , mode\n           , function (err, fd) {\n      if (err) {\n        if (callback) callback(err)\n        return\n      }\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      fs.fchmod(fd, mode, function (err) {\n        fs.close(fd, function(err2) {\n          if (callback) callback(err || err2)\n        })\n      })\n    })\n  }\n\n  fs.lchmodSync = function (path, mode) {\n    var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n    // prefer to return the chmod error, if one occurs,\n    // but still try to close, and report closing errors if they occur.\n    var threw = true\n    var ret\n    try {\n      ret = fs.fchmodSync(fd, mode)\n      threw = false\n    } finally {\n      if (threw) {\n        try {\n          fs.closeSync(fd)\n        } catch (er) {}\n      } else {\n        fs.closeSync(fd)\n      }\n    }\n    return ret\n  }\n}\n\nfunction patchLutimes (fs) {\n  if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n    fs.lutimes = function (path, at, mt, cb) {\n      fs.open(path, constants.O_SYMLINK, function (er, fd) {\n        if (er) {\n          if (cb) cb(er)\n          return\n        }\n        fs.futimes(fd, at, mt, function (er) {\n          fs.close(fd, function (er2) {\n            if (cb) cb(er || er2)\n          })\n        })\n      })\n    }\n\n    fs.lutimesSync = function (path, at, mt) {\n      var fd = fs.openSync(path, constants.O_SYMLINK)\n      var ret\n      var threw = true\n      try {\n        ret = fs.futimesSync(fd, at, mt)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n\n  } else {\n    fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n    fs.lutimesSync = function () {}\n  }\n}\n\nfunction chmodFix (orig) {\n  if (!orig) return orig\n  return function (target, mode, cb) {\n    return orig.call(fs, target, mode, function (er) {\n      if (chownErOk(er)) er = null\n      if (cb) cb.apply(this, arguments)\n    })\n  }\n}\n\nfunction chmodFixSync (orig) {\n  if (!orig) return orig\n  return function (target, mode) {\n    try {\n      return orig.call(fs, target, mode)\n    } catch (er) {\n      if (!chownErOk(er)) throw er\n    }\n  }\n}\n\n\nfunction chownFix (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid, cb) {\n    return orig.call(fs, target, uid, gid, function (er) {\n      if (chownErOk(er)) er = null\n      if (cb) cb.apply(this, arguments)\n    })\n  }\n}\n\nfunction chownFixSync (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid) {\n    try {\n      return orig.call(fs, target, uid, gid)\n    } catch (er) {\n      if (!chownErOk(er)) throw er\n    }\n  }\n}\n\n\nfunction statFix (orig) {\n  if (!orig) return orig\n  // Older versions of Node erroneously returned signed integers for\n  // uid + gid.\n  return function (target, cb) {\n    return orig.call(fs, target, function (er, stats) {\n      if (!stats) return cb.apply(this, arguments)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      if (cb) cb.apply(this, arguments)\n    })\n  }\n}\n\nfunction statFixSync (orig) {\n  if (!orig) return orig\n  // Older versions of Node erroneously returned signed integers for\n  // uid + gid.\n  return function (target) {\n    var stats = orig.call(fs, target)\n    if (stats.uid < 0) stats.uid += 0x100000000\n    if (stats.gid < 0) stats.gid += 0x100000000\n    return stats;\n  }\n}\n\n// ENOSYS means that the fs doesn't support the op. Just ignore\n// that, because it doesn't matter.\n//\n// if there's no getuid, or if getuid() is something other\n// than 0, and the error is EINVAL or EPERM, then just ignore\n// it.\n//\n// This specific case is a silent failure in cp, install, tar,\n// and most other unix tools that manage permissions.\n//\n// When running as root, or if other types of errors are\n// encountered, then it's strict.\nfunction chownErOk (er) {\n  if (!er)\n    return true\n\n  if (er.code === \"ENOSYS\")\n    return true\n\n  var nonroot = !process.getuid || process.getuid() !== 0\n  if (nonroot) {\n    if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n      return true\n  }\n\n  return false\n}\n","var _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\n\nfunction readFile (file, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  // DO NOT USE 'passParsingErrors' THE NAME WILL CHANGE!!!, use 'throws' instead\n  if ('passParsingErrors' in options) {\n    shouldThrow = options.passParsingErrors\n  } else if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  fs.readFile(file, options, function (err, data) {\n    if (err) return callback(err)\n\n    data = stripBom(data)\n\n    var obj\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null)\n    } catch (err2) {\n      if (shouldThrow) {\n        err2.message = file + ': ' + err2.message\n        return callback(err2)\n      } else {\n        return callback(null, null)\n      }\n    }\n\n    callback(null, obj)\n  })\n}\n\nfunction readFileSync (file, options) {\n  options = options || {}\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  // DO NOT USE 'passParsingErrors' THE NAME WILL CHANGE!!!, use 'throws' instead\n  if ('passParsingErrors' in options) {\n    shouldThrow = options.passParsingErrors\n  } else if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  var content = fs.readFileSync(file, options)\n  content = stripBom(content)\n\n  try {\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + ': ' + err.message\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nfunction writeFile (file, obj, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var spaces = typeof options === 'object' && options !== null\n    ? 'spaces' in options\n    ? options.spaces : this.spaces\n    : this.spaces\n\n  var str = ''\n  try {\n    str = JSON.stringify(obj, options ? options.replacer : null, spaces) + '\\n'\n  } catch (err) {\n    if (callback) return callback(err, null)\n  }\n\n  fs.writeFile(file, str, options, callback)\n}\n\nfunction writeFileSync (file, obj, options) {\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var spaces = typeof options === 'object' && options !== null\n    ? 'spaces' in options\n    ? options.spaces : this.spaces\n    : this.spaces\n\n  var str = JSON.stringify(obj, options.replacer, spaces) + '\\n'\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  content = content.replace(/^\\uFEFF/, '')\n  return content\n}\n\nvar jsonfile = {\n  spaces: null,\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n}\n\nmodule.exports = jsonfile\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\nclass GetTimer {\n\n    static getTimer() {\n        return new Date().getTime();\n    }\n}\n\nlet _getTimer: any = GetTimer.getTimer\n\nexport  { _getTimer as getTimer };\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\nimport Vector2 from './vector2';\n\nexport class Point extends Vector2 {\n\n    constructor(x=0, y=0) {\n        super(x, y);\n        //this.x = x;\n        //this.y = y;\n    }\n\n    toString() {\n        return `(${this.x}, ${this.y})`;\n    }\n\n    static distance(point1, point2) {\n        //let vec1 = new Vector2(point1.x, point1.y);\n        //let diff = vec1.diff(point2); //Point can be used as an argument for diff\n\n        let diff = point1.diff(point2);\n\n        return diff.magnitude;\n    }\n\n    static interpolate(point1, point2, factor) {\n            let dx = point1.x + (point2.x - point1.x) * factor;\n            let dy = point1.y + (point2.y - point1.y) * factor;\n            return new Point(dx, dy);\n    }\n}\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 4/14/15.\n */\n\nimport { Point } from './Point';\n\nexport class Rect {\n\n    public top: number;\n    public left: number;\n    public width: number;\n    public height: number;\n\n    private _right: number;\n    private _bottom: number;\n\n\n    constructor(top=0, left=0, width=0, height=0) {\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n        this._right = this.right;\n        this._bottom = this.bottom;\n    }\n\n    toString() {\n        return `top: ${this.top}, left: ${this.left}, bottom: ${this.bottom}, right ${this.right} - ${this.width}, ${this.height}`;\n    }\n\n    get right() {\n        return this.left + this.width;\n    }\n\n    get bottom() {\n        return this.top + this.height;\n    }\n\n    inBounds(point) {\n        return point.x >= this.left &&\n            point.x <= this.right &&\n            point.y >= this.top &&\n            point.y <= this.bottom;\n    }\n\n    expandToIncludePoint(point) {\n        this.top = Math.min(this.top, point.y);\n        this.left = Math.min(this.left, point.x);\n        this._right = Math.max(this._right, point.x);\n        this._bottom = Math.max(this._bottom, point.y);\n\n        this.width = this._right - this.left;\n        this.height = this._bottom - this.top;\n    }\n\n    expandToIncludeRect(rect) {\n        this.expandToIncludePoint(new Point(rect.left, rect.top));\n        this.expandToIncludePoint(new Point(rect.right, rect.bottom));\n    }\n}\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\n/**\n * ...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nimport { WwSprite } from './WwSprite';\n\nexport class WwBrush extends WwSprite {\n\n    public color: number;\n    constructor(mode='canvas', PIXI?: any) {\n        super(0, 0, mode, PIXI);\n        this.color = null;\n    }\n\n    onReady() {\n        this.centerPivot();\n        super.onReady();\n\n        //__img.blendMode = BlendMode.NORMAL;\n        //__img.color = __color;\n    }\n}\n\n/*\n package org.wwlib.starling\n {\n import flash.events.Event;\n\n import starling.display.BlendMode;\n\n\n public class WwBrush extends WwSprite\n {\n\n private var __color:uint;\n private var __brushScale:Number = 1.0;\n\n public function WwBrush()\n {\n\n }\n\n protected override function onImageLoaded(event:Event):void\n {\n super.onImageLoaded(event);\n\n resetPivot();\n __img.blendMode = BlendMode.NORMAL;\n __img.color = __color;\n\n __debug.msg(\"pivot: \" + __img.pivotX + \", \" + __img.pivotY);\n }\n\n public function resetPivot():void\n {\n if (__img)\n {\n //__img.pivotX = __img.width / 2; //(2 * __scaleFactor);\n //__img.pivotY = __img.height / 2; //(2 * __scaleFactor);\n\n // MAGIC NUMBER\n var brush_size:Number = 64.0 * __brushScale;\n var mid_point:Number = brush_size / 2.0;\n\n __img.pivotX = 32.0;\n __img.pivotY = 32.0;\n }\n }\n\n public function setColor(_color:uint):void\n {\n __color = _color;\n if (__img != null)\n {\n __img.color = __color;\n }\n }\n\n public override function resetScale():void\n {\n if (__img)\n {\n __img.scaleX = __scaleFactor * __brushScale;\n __img.scaleY = __scaleFactor * __brushScale;\n resetPivot();\n }\n }\n\n public function set brushScale(scale:Number):void\n {\n __brushScale = scale;\n resetScale();\n }\n\n }\n }\n */\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\nexport class WwDeviceInfo {\n\n    private  static _instance: WwDeviceInfo;\n    private _assetScaleFactor: number;\n\n    constructor() {\n        this._assetScaleFactor = 1.0;\n    }\n\n    static get instance() {\n        if (!WwDeviceInfo._instance) {\n            WwDeviceInfo._instance = new WwDeviceInfo();\n        }\n\n        return WwDeviceInfo._instance;\n    }\n\n    get assetScaleFactor() {\n        return this._assetScaleFactor;\n    }\n}\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\n/**\n * ...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nimport { WwBrush } from'./WwBrush';\n\nexport class WwDrawingBrushManager {\n\n    static _instance: WwDrawingBrushManager;\n\n    public initialized: boolean;\n    public brushIdArray: string[];\n    public brushURLs: any;\n    public brushes: any;\n    public brushesLoadedCount: number;\n    public callback: any;\n    public mode: string;\n    public brushesObject: any;\n    public PIXI: any;\n\n    constructor() {\n        this.brushIdArray = [];\n        this.brushURLs = {};\n        this.brushes = {};\n        this.brushesLoadedCount = 0;\n        this.initialized = false;\n    }\n\n    static get instance() {\n        if (!WwDrawingBrushManager._instance) {\n            WwDrawingBrushManager._instance = new WwDrawingBrushManager();\n        }\n\n        return WwDrawingBrushManager._instance;\n    }\n\n    init(callback=null, brushes_obj=null, mode='canvas', PIXI?: any)\n    {\n        console.log(`WwDrawingBrushManager: mode == ${mode}`);\n        this.callback = callback;\n        if (this.initialized) {\n            console.log(`WwDrawingBrushManager: init: already initialized`);\n            if (this.callback) {\n                this.callback(this.brushes);\n                this.callback = null;\n            }\n        } else {\n            this.mode = mode;\n            this.PIXI = PIXI;\n            this.brushesObject = brushes_obj;\n            this.brushIdArray = [];\n            this.brushURLs = {};\n            this.brushes = {};\n            this.brushesLoadedCount = 0;\n\n            if (!this.brushesObject) {\n                this.brushIdArray[0] = \"hard\";\n                this.brushIdArray[1] = \"soft\";\n                this.brushIdArray[2] = \"crayon\";\n                this.brushIdArray[3] = \"calligraphy\";\n                this.brushIdArray[4] = \"pencil\";\n                this.brushIdArray[5] = \"circleSoft\";\n                this.brushIdArray[6] = \"star\";\n\n                this.brushURLs[\"hard\"] = \"./images/brushes/hard_blue.png\";\n                this.brushURLs[\"soft\"] = \"./images/brushes/soft.png\";\n                this.brushURLs[\"crayon\"] = \"./images/brushes/crayon.png\";\n                this.brushURLs[\"calligraphy\"] = \"./images/brushes/calligraphy.png\";\n                this.brushURLs[\"pencil\"] = \"./images/brushes/pencil.png\";\n                this.brushURLs[\"circleSoft\"] = \"./images/brushes/circleSoft.png\";\n                this.brushURLs[\"star\"] = \"./images/brushes/star.png\"; //,interval_dash\";\n            } else {\n                let path = this.brushesObject.path ? this.brushesObject.path : \"./images/brushes/\";\n                let list = this.brushesObject.list;\n\n                if (!list) {\n                    console.log(`WwDrawingBrushManager: brushes list must be a valid array of brush names!`);\n                } else {\n                    list.forEach((brush_filename) => {\n                        let parts = brush_filename.split('.');\n                        let id = parts[0];\n                        this.brushIdArray.push(id);\n                        this.brushURLs[id] = path + brush_filename;\n                        //console.log(this.brushURLs[id]);\n                    });\n                }\n            }\n\n            //console.log(this.brushURLs);\n            //console.log(this.brushIdArray);\n            /*\n            this.brushURLs.forEach(_key => {\n                let _brush = new WwBrush();\n                _brush.loadImage(this.brushURLs[_key]);\n                this.brushes[_key] = _brush;\n                //console.log(\"BrushManager: \" + _key + \":\" + this.brushes[_key] + \", \" + this.brushURLs[_key], \"1\");\n            });\n            */\n\n            for (let _key in this.brushURLs) {\n                let _brush = new WwBrush(this.mode, this.PIXI);\n                let onBrushImageLoadedCallback = this.onBrushImageLoaded.bind(this);\n                _brush.loadImageWithURLAndCallback(this.brushURLs[_key], onBrushImageLoadedCallback);\n                this.brushes[_key] = _brush;\n            }\n        }\n    }\n\n    onBrushImageLoaded(sprite) {\n        this.brushesLoadedCount++;\n\n        if (this.brushesLoadedCount == this.brushIdArray.length) {\n            this.initialized = true;\n            if (this.callback) {\n                this.callback(this.brushes);\n                this.callback = null;\n            }\n        }\n    }\n\n    getBrushFromBrushId(_id)\n    {\n        return this.brushes[_id];\n    }\n\n    getBrushIdWithIndex(index)\n    {\n        return this.brushIdArray[index];\n    }\n\n}\n\n/*\n\n package org.wwlib.drawing\n {\n import flash.utils.Dictionary;\n\n import org.wwlib.starling.WwBrush;\n import org.wwlib.utils.WwDebug;\n\n\npublic class WwDrawingBrushManager\n{\n    private static var __instance:WwDrawingBrushManager;\n\n    private var __debug:WwDebug;\n    private var __brushIDArray:Array;\n    private var __brushURLs:Dictionary;\n    private var __brushes:Dictionary;\n    //private var __brushBitmaps:Dictionary;\n\n    //private var __debugBrush:WwBrush;\n\n\n    public function WwDrawingBrushManager(enforcer:SingletonEnforcer)\n    {\n        if (!(enforcer is SingletonEnforcer))\n        {\n            throw new ArgumentError(\"QcColoringBrushManager cannot be directly instantiated!\");\n        }\n\n        __debug = WwDebug.instance;\n    }\n\n\n    public static function init():WwDrawingBrushManager\n    {\n        //NOTE: Brush Manager needs to re-initialize whenever a new Starling context is created\n\n        if (__instance != null)\n        {\n            __instance.dispose();\n        }\n\n        __instance = new WwDrawingBrushManager(new SingletonEnforcer());\n        __instance.setup();\n\n        return __instance;\n    }\n\n    public static function get instance(): WwDrawingBrushManager\n    {\n        return __instance;\n    }\n\n    private function setup():void\n    {\n        __brushIDArray = new Array();\n        __brushURLs = new Dictionary();\n        __brushes = new Dictionary();\n\n        __brushIDArray[0] = \"hard\";\n        __brushIDArray[1] = \"soft\";\n        __brushIDArray[2] = \"crayon\";\n        __brushIDArray[3] = \"calligraphy\";\n        __brushIDArray[4] = \"x\";\n        __brushIDArray[5] = \"crosshairs\";\n        __brushIDArray[6] = \"arrow\";\n\n        __brushURLs[\"hard\"] = \"assets/brushes/brush_hard.png\";\n        __brushURLs[\"soft\"] = \"assets/brushes/brush_soft.png\";\n        __brushURLs[\"crayon\"] = \"assets/brushes/brush_crayon.png\";\n        __brushURLs[\"calligraphy\"] = \"assets/brushes/brush_calligraphy.png\";\n        __brushURLs[\"x\"] = \"assets/brushes/brush_x.png\";\n        __brushURLs[\"crosshairs\"] = \"assets/brushes/brush_crosshairs.png\";\n        __brushURLs[\"arrow\"] = \"assets/brushes/brush_arrow.png\"; //,interval_dash\";\n\n        var _key:Object;\n\n        for (_key in __brushURLs)\n        {\n            var _brush:WwBrush = new WwBrush();\n            _brush.loadImage(__brushURLs[_key]);\n            __brushes[_key] = _brush;\n            //__debug.msg(\"BrushManager: \" + _key + \":\" + __brushes[_key] + \", \" + __brushURLs[_key], \"1\");\n        }\n    }\n\n    //Moved to BrushManager from WwDrawingtarling 7/2/2015\n\n\n    public function getBrushFromBrushID(_id:String):WwBrush\n    {\n        return __brushes[_id];\n    }\n\n    public function getBrushIDWithIndex(index:int):String\n    {\n        return __brushIDArray[index];\n    }\n\n    public function get brushIDs():Array\n    {\n        return __brushIDArray;\n    }\n\n    public function get brushURLs():Dictionary\n    {\n        return __brushURLs;\n    }\n\n    public function dispose():void\n    {\n        var brush:WwBrush;\n\n        for each (brush in __brushes)\n        {\n            brush.dispose();\n        }\n\n        __brushIDArray = null;\n        __brushURLs = null;\n        __brushes = null;\n    }\n\n\n//\t\tpublic function get brushBitmaps():Dictionary\n//\t\t{\n//\t\t\treturn __brushBitmaps;\n//\t\t}\n\n\n}\n}\n\n\n */\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\n/**\n * ...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nimport { WwDrawingHistoryUnit } from'./WwDrawingHistoryUnit';\nimport { WwDeviceInfo } from './WwDeviceInfo';\nimport { Rect } from './Rect';\n\nexport class WwDrawingHistory {\n\n    public units: WwDrawingHistoryUnit[];\n    public startTime: number;\n    public duration: number;\n    public boundingRect: Rect;\n    public scale: number;\n    public sessions: any[];\n    public unitLineLength: number;\n\n    constructor() {\n        this.units = [];\n        this.startTime = 0;\n        this.duration = 0;\n        this.boundingRect = null;\n        this.scale = 1;\n        this.sessions = [];\n    }\n\n    toString()\n    {\n        let result = \"Start: \" + this.startTime + \", duration: \" + this.duration + \", end: \" + (this.startTime + this.duration) + \"\\n\";\n        this.units.forEach(unit => {\n            result += unit.toString();\n        });\n        return result;\n    }\n\n    addUnit(unit)\n    {\n        if (unit)\n        {\n            this.units.push(unit);\n            if (!this.boundingRect) {\n                this.boundingRect = unit.boundingRect;\n            } else {\n                this.boundingRect.expandToIncludeRect(unit.boundingRect);\n            }\n            this.unitLineLength += unit.lineLength;\n            this.duration += unit.duration;\n        }\n        else\n        {\n            console.log(`WwDrawingHistory:addUnit: unit is null`);\n        }\n    }\n\n\n    concatAllCommands(layer = null) {\n        let unit = new WwDrawingHistoryUnit();\n        let unit_start_time_offset = 0;\n\n        this.units.forEach(temp_unit => {\n            if (temp_unit) {\n                temp_unit.commands.forEach(temp_command => {\n                    /*\n                    if (this.startTime == 0) {\n                        this.startTime = temp_command.executionTime;\n                    }\n                    else {\n                        this.startTime = Math.min(this.startTime, temp_command.executionTime);\n                    }\n                    */\n                    temp_command.executionTime += unit_start_time_offset;\n                    this.duration = Math.max(this.duration, temp_command.executionTime);\n                    if (layer) {\n                        if (layer == temp_command.layerId) {\n                            //console.log(` add: ${temp_unit.id}: ${temp_command.executionTime}`);\n                            unit.addCommand(temp_command, false, false);//, false, false);\n                        }\n                    }\n                    else {\n                        unit.addCommand(temp_command, false, false);//, false, false);\n                    }\n                });\n                unit_start_time_offset += temp_unit.duration;\n            }\n        });\n\n        return unit;\n    }\n\n    get json()\n    {\n        console.log(`Generating json`);\n        let json: any = {};\n        json.start = this.startTime;\n        json.end = this.duration;\n        json.scale = this.scale;\n\n        // units\n        let _units = [];\n        this.units.forEach(_unit => {\n            _units.push(_unit.json);\n        });\n        json.units = _units;\n\n        // sessions\n        let _sessions = [];\n        this.sessions.forEach(_session => {\n            _sessions.push(_session.json);\n            json.stats = _session.stats.json; //keep the latest\n        });\n        json.sessions = _sessions;\n\n        return json;\n    }\n}\n\n/*\n\n package org.wwlib.drawing\n {\n import org.wwlib.utils.WwDebug;\n import org.wwlib.utils.WwDeviceInfo;\n\n\npublic class WwDrawingHistory\n{\n    private var __debug:WwDebug;\n    private var __units:Vector.<WwDrawingHistoryUnit>;\n    private var __startTime:int;\n    private var __duration:int;\n    private var __timeScale:Number = 1.0;\n    private var __id:int;\n    private var __unitLineLength:Number;\n    private var __sessions:Vector.<WwDrawingHistorySession>;\n\n    private var __json:Object = null;\n\n    public function WwDrawingHistory()\n    {\n        __debug = WwDebug.instance;\n        __units = new Vector.<WwDrawingHistoryUnit>;\n        __startTime = 0;\n        __duration = 0;\n        __unitLineLength = 0;\n        __sessions = new Vector.<WwDrawingHistorySession>;\n    }\n\n    public function addUnit(_unit:WwDrawingHistoryUnit):void\n    {\n\n        if (_unit)\n        {\n            //__debug.msg(\"QcColoringHistory:addUnit: \" + _unit.id, \"6\");\n            __units.push(_unit);\n            __unitLineLength += _unit.lineLength;\n            __duration += _unit.duration;\n        }\n        else\n        {\n            __debug.msg(\"WwDrawingHistory:addUnit: unit is null\", \"6\");\n        }\n    }\n\n    public function removeLastUnit():WwDrawingHistoryUnit\n    {\n        var unit:WwDrawingHistoryUnit = __units.pop();\n        if (unit)\n        {\n            __unitLineLength -= unit.lineLength;\n            __duration -= unit.duration;\n        }\n\n        return unit;\n    }\n\n    public static function MERGE_HISTORIES(_history1:WwDrawingHistory, _history2:WwDrawingHistory, _history3:WwDrawingHistory):WwDrawingHistory\n    {\n        var new_history:WwDrawingHistory = new WwDrawingHistory;\n        var unit:WwDrawingHistoryUnit;\n\n        for each (unit in _history1.units)\n        {\n            new_history.addUnit(unit);\n        }\n\n        for each (unit in _history2.units)\n        {\n            new_history.addUnit(unit);\n        }\n\n        for each (unit in _history3.units)\n        {\n            new_history.addUnit(unit);\n        }\n\n        return new_history;\n    }\n\n    public function sortUnitsByStartTime():void\n    {\n        __units = __units.sort(sortCompareUnitStartTime);\n    }\n\n    private function sortCompareUnitStartTime(_unit1:WwDrawingHistoryUnit, _unit2:WwDrawingHistoryUnit):Number\n    {\n        return _unit1.startTime - _unit2.startTime;\n    }\n\n    public function debugTime():String\n    {\n        var result:String = \"History: \" + __id + \": start: \" + __startTime + \", duration: \" + __duration + \", end: \" + (__startTime + __duration) + \"\\n\";\n        for each (var _unit:WwDrawingHistoryUnit in __units)\n        {\n            result += _unit.debugTime();\n        }\n        return result;\n    }\n\n    public function concatAllCommands(layer:String=null):WwDrawingHistoryUnit\n    {\n        var _unit:WwDrawingHistoryUnit = new WwDrawingHistoryUnit();\n\n        for each (var temp_unit:WwDrawingHistoryUnit in __units)\n        {\n            if (temp_unit)\n            {\n                for each (var temp_command:WwDrawingHistoryBrushCommand in temp_unit.commands)\n                {\n                    if (__startTime == 0)\n                    {\n                        __startTime = temp_command.executionTime;\n                    }\n                    else\n                    {\n                        __startTime = Math.min(__startTime, temp_command.executionTime);\n                    }\n                    __duration = Math.max(__duration, temp_command.executionTime);\n                    if (_layer)\n                    {\n                        if (_layer == temp_command.layerID)\n                        {\n                            _unit.addCommand(temp_command, false, false);//, false, false);\n                        }\n                    }\n                    else\n                    {\n                        _unit.addCommand(temp_command, false, false);//, false, false);\n                    }\n                }\n            }\n        }\n\n        return _unit;\n    }\n\n    public function deleteUnitsByLayerID(_id:String):void\n    {\n        var _new_unit_list:Vector.<WwDrawingHistoryUnit> = new Vector.<WwDrawingHistoryUnit>;\n\n        for each (var temp_unit:WwDrawingHistoryUnit in __units)\n        {\n            if (temp_unit)\n            {\n                if (temp_unit.layerID != _id)\n                {\n                    _new_unit_list.push(temp_unit);\n                }\n                else\n                {\n                    temp_unit.dispose();\n                }\n            }\n        }\n\n        __units = _new_unit_list;\n    }\n\n*/\n\n/*\n\n    public function get json():Object\n    {\n        __json = new Object();\n        __json.id = __id;\n        __json.start = startTime;\n        __json.end = duration;\n        __json.scale = WwDeviceInfo.instance.assetScaleFactor;\n\n        // units\n        var _units:Array = new Array();\n        for each (var _unit:WwDrawingHistoryUnit in __units)\n        {\n            _units.push(_unit.json);\n        }\n        __json.units = _units;\n\n        // sessions\n        var _sessions:Array = [];\n        for each (var _session:WwDrawingHistorySession in __sessions)\n        {\n            _sessions.push(_session.json);\n        }\n        __json.sessions = _sessions;\n\n        // add redundant stats - most recent - for inclusion in fdl\n        __json.stats = _session.stats.json;\n\n        return __json;\n    }\n\n    public function reset():void\n    {\n        __units = new Vector.<WwDrawingHistoryUnit>;\n        __startTime = 0;\n    }\n\n    public function debug():void\n    {\n        //__debug.clear();\n        __debug.msg(\"History: debug: \" + __units.length, \"1\");\n        for each (var temp_unit:WwDrawingHistoryUnit in __units)\n        {\n            __debug.msg(\"  \" + temp_unit.startTime, \"1\");\n        }\n    }\n\n    public function dispose():void\n    {\n        for each (var _unit:WwDrawingHistoryUnit in __units)\n        {\n            _unit.dispose();\n        }\n        __units = null;\n    }\n\n    public function get units():Vector.<WwDrawingHistoryUnit>\n{\n        return __units\n}\n\npublic function set units(_units:Vector.<WwDrawingHistoryUnit>):void\n{\n    __units = _units;\n}\n\npublic function get unitCount():int\n{\n    return __units.length;\n}\n\n\npublic function get startTime():int\n{\n    return __startTime;\n}\n\npublic function get timeScale():Number\n{\n    return __timeScale;\n}\n\npublic function set timeScale(value:Number):void\n{\n    __timeScale = value;\n    for each (var temp_unit:WwDrawingHistoryUnit in __units)\n    {\n        temp_unit.timeScale = __timeScale;\n    }\n}\n\npublic function get scaledDuration():int\n{\n    return __duration * __timeScale;\n}\n\npublic function get duration():int\n{\n    return __duration;\n}\n\npublic function set duration(value:int):void\n{\n    __duration = value;\n}\n\npublic function get unitLineLength():Number\n{\n    return __unitLineLength;\n}\n\npublic function get sessions():Vector.<WwDrawingHistorySession>\n{\n    return __sessions;\n}\n\npublic function set sessions(value:Vector.<WwDrawingHistorySession>):void\n{\n    __sessions = value;\n}\n\n\n}\n}\n */\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\n/**\n * ...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nimport { Point } from './Point';\nimport { getTimer } from './GetTimer';\nimport { WwBrush } from './WwBrush';\nimport { WwDrawingBrushManager } from './WwDrawingBrushManager';\n\nexport class WwDrawingHistoryBrushCommand {\n\n    public brushExpansionFactor: number;\n    public brushBlendMode: string;\n    public executionTime: number;\n    public brushAlpha: number;\n    public brushRotation: number;\n    public layerId: string;\n    public generatedCommand: boolean;\n    public offset: Point;\n    public scale: number;\n    public lineLength: number; //the line length up to this point, from the start of the unit\n    public prevCommand: WwDrawingHistoryBrushCommand;\n    public rendered: boolean;\n    public unitId: number;\n    public timeScale: number;\n    public normalizedExecutionTime: number;\n    public uintColor: number; // TODO\n\n    private _brush: WwBrush;\n    private _brushId: string;\n    private _location: Point;\n    private _color: number;\n    private _brushScale: number;\n\n    constructor(brush_id, location_point, time=null, uint_color=null, brush_scale=1.0, expansion_factor=1.0, blend_mode=\"normal\", alpha=1.0, rotation=0, layer_id=\"UNDER\", generated=false) {\n\n        this._brushId = brush_id;\n        this._location = location_point;\n        this._color = uint_color;\n        this._brushScale = brush_scale;\n        this.brushExpansionFactor = expansion_factor;\n        this.brushBlendMode = blend_mode;\n        this.executionTime = time;\n        this.brushAlpha = alpha;\n        this.brushRotation =rotation;\n        this.layerId = layer_id;\n        this.generatedCommand = generated;\n        this.offset = new Point();\n        this.scale = 1.0;\n\n        this.lineLength = 0; //the line length up to this point, from the start of the unit\n        this.prevCommand = null;\n        this.rendered = false;\n\n        this.unitId = null;\n        this.timeScale = 1.0;\n        this._brush = null;\n\n        if (this.executionTime === null) {\n            this.executionTime = 0; //getTimer();\n        }\n        this.normalizedExecutionTime = this.executionTime;\n    }\n\n    onReady() {\n        // this.centerPivot();\n        // super.onReady();\n\n        //__img.blendMode = BlendMode.NORMAL;\n        //__img.color = __color;\n    }\n\n    get brush()\n    {\n        this._brush = WwDrawingBrushManager.instance.getBrushFromBrushId(this._brushId);\n\n        if (this._brush)\n        {\n            this._brush.scale = this._brushScale * this.brushExpansionFactor * this.scale;\n\n            /*\n            switch(this.brushBlendMode)\n            {\n                case \"erase\": this._brush.image.blendMode = BlendMode.ERASE;\n                    break;\n\n                case \"normal\": this._brush.image.blendMode = BlendMode.NORMAL;\n                    break;\n\n                default: this._brush.image.blendMode = BlendMode.NORMAL;\n                    break;\n            }\n            */\n\n            this._brush.color = this._color;\n            this._brush.rotation = this.brushRotation;\n            this._brush.x = this._location.x * this.scale + this.offset.x;\n            this._brush.y = this._location.y * this.scale + this.offset.y;\n            this._brush.alpha = this.brushAlpha;\n        }\n\n        return this._brush;\n    }\n\n    get brushId()\n    {\n        return this._brushId;\n    }\n\n    set brushId(value)\n    {\n        this._brushId = value;\n    }\n\n    get location()\n    {\n        return this._location;\n    }\n\n    set location(value)\n    {\n        this._location = value;\n    }\n\n    get color()\n    {\n        return this._color;\n    }\n\n    set color(value)\n    {\n        this._color = value;\n    }\n\n    get brushScale()\n    {\n        return this._brushScale;\n    }\n\n    set brushScale(value)\n    {\n        this._brushScale = value;\n    }\n\n    toString()\n    {\n        let result = `WwDrawingHistoryBrushCommand\\n`;\n        result += `${this._brushId}\\n`;\n        result += `${this.unitId}\\n`;\n        result += `${this._location}\\n`;\n        result += `${this._color}\\n`;\n        result += `${this._brushScale}\\n`;\n        result += `${this.brushExpansionFactor}\\n`;\n        result += `${this.brushBlendMode}\\n`;\n        result += `${this.executionTime}\\n`;\n        result += `${this.brushAlpha}\\n`;\n        result += `${this.brushRotation}\\n`;\n        result += `${this.timeScale}\\n`;\n        result += `${this.layerId}\\n`;\n        result += `${this.generatedCommand}\\n`;\n        result += `${this._brush}\\n`;\n\n        return result;\n    }\n\n    toStringMin() {\n\n        return `Cmd: ${this.unitId}: ${this.layerId}: ${this.executionTime}`;\n    }\n\n    // Update Methods\n\n    updateBrushId(value)\n    {\n        if (value) { this.brushId = value; return value }\n        else { return this.brushId }\n    }\n\n    updateUintColor(value)\n    {\n        if (value) { this.uintColor = value; return value }\n        else { return this.uintColor }\n    }\n\n    updateUnitId(value)\n    {\n        if (value) { this.unitId = value; return value }\n        else { return this.unitId }\n    }\n\n    updateLayerId(value)\n    {\n        if (value) { this.layerId = value; return value }\n        else { return this.layerId }\n    }\n\n    updateExecutionTime(value)\n    {\n        if (value != undefined) { this.executionTime = value; return value }\n        else { return this.executionTime }\n    }\n\n    updateBrushScale(value)\n    {\n        if (value) { this.brushScale = value; return value }\n        else { return this.brushScale }\n    }\n\n    updateBlendMode(value)\n    {\n        if (value) { this.brushBlendMode = value; return value }\n        else { return this.brushBlendMode }\n    }\n\n    updateBrushAlpha(value)\n    {\n        if (value) { this.brushAlpha = value; return value }\n        else { return this.brushAlpha }\n    }\n\n    updateBrushRotation(value)\n    {\n        if (value) { this.brushRotation = value; return value }\n        else { return this.brushRotation }\n    }\n\n    updateX(value)\n    {\n        if (!this._location) { this._location = new Point(0,0); }\n\n        if (value) { this._location.x = value; return value }\n        else { return this._location.x }\n    }\n\n    updateY(value)\n    {\n        if (!this._location) { this._location = new Point(0,0); }\n\n        if (value) { this._location.y = value; return value }\n        else { return this._location.y }\n    }\n\n    //Redundancy Methods\n\n    checkRedundancyOfBrushId(data_object, property, value)\n    {\n        if (value == this.brushId) { }\n        else { this.brushId = value; data_object[property] = this.brushId }\n    }\n\n    checkRedundancyOfUintColor(data_object, property, value)\n    {\n        if (value == this.uintColor) { }\n        else { this.uintColor = value; data_object[property] = this.uintColor }\n    }\n\n    checkRedundancyOfUnitId(data_object, property, value)\n    {\n        if (value == this.unitId) { }\n        else { this.unitId = value; data_object[property] = this.unitId }\n    }\n\n    checkRedundancyOfLayerId(data_object, property, value)\n    {\n        if (value == this.layerId) { }\n        else { this.layerId = value; data_object[property] = this.layerId }\n    }\n\n    checkRedundancyOfExecutionTime(data_object, property, value)\n    {\n        //always include time parameter. SAR:150619\n        if (false && value == this.executionTime) { }\n        else { this.executionTime = value; data_object[property] = this.executionTime }\n    }\n\n    checkRedundancyOfBrushScale(data_object, property, value)\n    {\n        if (value == this.brushScale) { }\n        else { this.brushScale = value; data_object[property] = this.brushScale }\n    }\n\n    checkRedundancyOfBrushBlendMode(data_object, property, value)\n    {\n        if (value == this.brushBlendMode) { }\n        else { this.brushBlendMode = value; data_object[property] = this.brushBlendMode }\n    }\n\n    checkRedundancyOfBrushAlpha(data_object, property, value)\n    {\n        if (value == this.brushAlpha) { }\n        else { this.brushAlpha = value; data_object[property] = this.brushAlpha }\n    }\n\n    checkRedundancyOfBrushRotation(data_object, property, value)\n    {\n        if (value == this.brushRotation) { }\n        else { this.brushRotation = value; data_object[property] = this.brushRotation }\n    }\n\n    checkRedundancyOfGeneratedCommand(data_object, property, value)\n    {\n        if (value == this.generatedCommand) { }\n        else { this.generatedCommand = value; data_object[property] = this.generatedCommand }\n    }\n\n    checkRedundancyOfX(data_object, property, value)\n    {\n        if (!this._location) { this._location = new Point(0,0); }\n\n        if (value == this._location.x) { }\n        else { this._location.x = value; data_object[property] = this._location.x }\n    }\n\n    checkRedundancyOfY(data_object, property, value)\n    {\n        if (!this._location) { this._location = new Point(0,0); }\n\n        if (value == this._location.y) { }\n        else { this._location.y = value; data_object[property] =  this._location.y }\n    }\n\n    static clone(_command, data_object=null)\n    {\n        var _clone = new WwDrawingHistoryBrushCommand(_command.brushId, new Point(_command.location.x, _command.location.y));\n\n        //_clone.location = new Point(_command.location.x, _command.location.y);\n        _clone.uintColor = _command.uintColor;\n        _clone.brushScale = _command.brushScale;\n        _clone.brushExpansionFactor = _command.brushExpansionFactor;\n        _clone.brushBlendMode = _command.brushBlendMode;\n        _clone.executionTime = _command.executionTime;\n        _clone.brushAlpha = _command.brushAlpha;\n        _clone.brushRotation = _command.brushRotation;\n        _clone.timeScale = _command.timeScale;\n        _clone.layerId = _command.layerId;\n        _clone.generatedCommand = _command.generatedCommand;\n        _clone.unitId = _command.unitId;\n        _clone.offset = _command.offset;\n        _clone.scale = _command.scale;\n\n        if (data_object) {\n            _clone.updateUnitId(data_object.uid);\n            _clone.updateBrushId(data_object.bid);\n            _clone.updateX(data_object.x);\n            _clone.updateY(data_object.y);\n            _clone.updateExecutionTime(data_object.t);\n            _clone.updateUintColor(data_object.c);\n            _clone.updateBrushScale(data_object.s);\n            _clone.updateBlendMode(data_object.bm);\n            _clone.updateBrushAlpha(data_object.a);\n            _clone.updateBrushRotation(data_object.r);\n            _clone.updateLayerId(data_object.lid);\n        }\n\n        return _clone;\n    }\n\n    dispose()\n    {\n        this._brush = null;\n        this._location = null;\n    }\n}\n\n/*\nimport flash.utils.getTimer;\n\nimport org.wwlib.starling.WwBrush;\nimport org.wwlib.utils.WwDebug;\n\nimport starling.display.BlendMode;\n\n\n    public class WwDrawingHistoryBrushCommand\n    {\n        private var __debug:WwDebug;\n        private var __brushID:String;\n        private var __brush:WwBrush;\n        private var __location:Point;\n        private var __uintColor:uint;\n        private var __brushScale:Number;\n        private var __brushExpansionFactor:Number = 1.0;\n        private var __brushBlendMode:String;\n        private var __executionTime:int;\n        private var __normalizedExecutionTime:int;\n        private var __brushAlpha:Number;\n        private var __brushRotation:Number;\n        private var __timeScale:Number = 1.0;\n        private var __layerID:String;\n        private var __generatedCommand:Boolean;\n        private var __unitID:int;\n        private var __lineLength:Number = 0;\n        private var __prevCommand:WwDrawingHistoryBrushCommand = null;\n        private var __rendered:Boolean = false;\n\n        private var __json:Object = null;\n\n        public function WwDrawingHistoryBrushCommand(_brushID:String, _location:Point=null, _uint_color:uint=0, _brush_scale:Number=1.0, _expansion_factor:Number=1.0, _blend_mode:String=\"normal\", _time:int=0, _alpha:Number=1.0, _rotation:Number=0, _layerID:String=\"UNDER\", _generated:Boolean=false):void\n    {\n        __debug = WwDebug.instance;\n        __brushID = _brushID;\n        __location = _location;\n        __uintColor = _uint_color;\n        __brushScale = _brush_scale;\n        __brushExpansionFactor = _expansion_factor;\n        __brushBlendMode = _blend_mode;\n        __executionTime = _time;\n        __brushAlpha = _alpha;\n        __brushRotation = _rotation;\n        __layerID = _layerID;\n        __generatedCommand = _generated;\n\n        if (__executionTime == 0) __executionTime = getTimer();\n        __normalizedExecutionTime = __executionTime;\n    }\n\n    public static function clone(_command:WwDrawingHistoryBrushCommand):WwDrawingHistoryBrushCommand\n    {\n        var _clone:WwDrawingHistoryBrushCommand = new WwDrawingHistoryBrushCommand(_command.brushID);\n\n        _clone.location = _command.location;\n        _clone.uintColor = _command.uintColor;\n        _clone.brushScale = _command.brushScale;\n        _clone.brushExpansionFactor = _command.brushExpansionFactor;\n        _clone.brushBlendMode = _command.brushBlendMode;\n        _clone.executionTime = _command.executionTime;\n        _clone.brushAlpha = _command.brushAlpha;\n        _clone.brushRotation = _command.brushRotation;\n        _clone.timeScale = _command.timeScale;\n        _clone.layerID = _command.layerID;\n        _clone.generatedCommand = _command.generatedCommand;\n        _clone.unitID = _command.unitID;\n        //_clone.lineLength = _command.lineLength;\n        //_clone.prevCommand = _command.prevCommand;\n        //_clone.rendered = _command.rendered;\n\n        return _clone;\n    }\n\n    public function dispose():void\n{\n    __brush = null;\n    __debug = null;\n    __location = null;\n}\n\npublic function debug():void\n    {\n        __debug.msg(\"Command: \" + __brushID, \"1\");\n__debug.msg(\" \" + __unitID, \"1\");\n__debug.msg(\" \" + __location, \"1\");\n__debug.msg(\" \" + __uintColor, \"1\");\n__debug.msg(\" \" + __brushScale, \"1\");\n__debug.msg(\" \" + __brushExpansionFactor, \"1\");\n__debug.msg(\" \" + __brushBlendMode, \"1\");\n__debug.msg(\" \" + __executionTime, \"1\");\n__debug.msg(\" \" + __brushAlpha, \"1\");\n__debug.msg(\" \" + __brushRotation, \"1\");\n__debug.msg(\" \" + __timeScale, \"1\");\n__debug.msg(\" \" + __layerID, \"1\");\n__debug.msg(\" \" + __generatedCommand, \"1\");\n__debug.msg(\" \" + __brush, \"1\");\n}\n\npublic function debugTime():String\n{\n    return \"  Command: \" + __unitID + \": \" + __executionTime + \"\\n\";\n}\n\npublic function get xml():String\n{\n    return \"  <command uid=\\\"\" + unitID + \"\\\" lid=\\\"\" + layerID + \"\\\" t=\\\"\" + __executionTime + \"\\\" bid=\\\"\" + __brushID + \"\\\" c=\\\"\" + __uintColor + \"\\\" s=\\\"\" + __brushScale + \"\\\" bm=\\\"\" + __brushBlendMode + \"\\\" a=\\\"\" + __brushAlpha + \"\\\" r=\\\"\" + __brushRotation + \"\\\" g=\\\"\" + __generatedCommand + \"\\\" x=\\\"\" + __location.x + \"\\\" y=\\\"\" + __location.y + \"\\\" />\\n\";\n}\n\npublic function get json():Object\n{\n    __json = new Object();\n    __json.uid = unitID;\n    __json.lid = layerID;\n    __json.t = __executionTime;\n    __json.bid = __brushID;\n    __json.c = __uintColor;\n    __json.s = __brushScale;\n    __json.bm = __brushBlendMode;\n    __json.a = __brushAlpha;\n    __json.r = __brushRotation;\n    __json.g = __generatedCommand;\n    __json.x = __location.x;\n    __json.y = __location.y;\n\n    return __json;\n}\n\npublic function setCurrentTime():void\n{\n    __executionTime = getTimer();\n}\n\npublic function get brush():WwBrush\n{\n    __brush = WwDrawingBrushManager.instance.getBrushFromBrushID(__brushID);\n\n    if (__brush)\n    {\n        __brush.brushScale = __brushScale * __brushExpansionFactor;\n\n        switch(__brushBlendMode)\n        {\n            case \"erase\": __brush.image.blendMode = BlendMode.ERASE;\n                break;\n\n            case \"normal\": __brush.image.blendMode = BlendMode.NORMAL;\n                break;\n\n            default: __brush.image.blendMode = BlendMode.NORMAL;\n                break;\n        }\n\n        __brush.image.color = __uintColor;\n        __brush.image.rotation = __brushRotation;\n        __brush.image.x = __location.x;\n        __brush.image.y = __location.y;\n        __brush.image.alpha = __brushAlpha;\n    }\n\n    return __brush;\n}\n\npublic function get brushID():String\n{\n    return __brushID;\n}\n\npublic function set brushID(value:String):void\n{\n    __brushID = value;\n}\n\n\npublic function get location():Point\n{\n    return __location;\n}\n\npublic function set location(value:Point):void\n{\n    __location = value;\n}\n\npublic function get uintColor():uint\n{\n    return __uintColor;\n}\n\npublic function set uintColor(value:uint):void\n{\n    __uintColor = value;\n}\n\npublic function get brushScale():Number\n{\n    return __brushScale;\n}\n\npublic function set brushScale(value:Number):void\n{\n    __brushScale = value;\n}\n\npublic function get brushExpansionFactor():Number\n{\n    return __brushExpansionFactor;\n}\n\npublic function set brushExpansionFactor(value:Number):void\n{\n    __brushExpansionFactor = value;\n}\n\npublic function get brushBlendMode():String\n{\n    return __brushBlendMode;\n}\n\npublic function set brushBlendMode(value:String):void\n{\n    __brushBlendMode = value;\n}\n\npublic function get executionTime():int\n{\n    return __executionTime;\n}\n\npublic function set executionTime(value:int):void\n{\n    __executionTime = value;\n__normalizedExecutionTime = value;\n}\n\npublic function get scaledExecutionTime():int\n{\n    return __executionTime * __timeScale;\n}\n\npublic function get brushAlpha():Number\n{\n    return __brushAlpha;\n}\n\npublic function set brushAlpha(value:Number):void\n{\n    __brushAlpha = value;\n}\n\npublic function get brushRotation():Number\n{\n    return __brushRotation;\n}\n\npublic function set brushRotation(value:Number):void\n{\n    __brushRotation = value;\n}\n\npublic function get timeScale():Number\n{\n    return __timeScale;\n}\n\npublic function set timeScale(value:Number):void\n{\n    __timeScale = value;\n}\n\npublic function get layerID():String\n{\n    return __layerID;\n}\n\npublic function set layerID(value:String):void\n{\n    __layerID = value;\n}\n\n//NormalizedExecutionTime seems to be the same as regular executionTime\n\npublic function get normalizedExecutionTime():int\n{\n    return __normalizedExecutionTime;\n}\n\n\n\npublic function get scaledNormalizedExecutionTime():int\n{\n    return __normalizedExecutionTime * __timeScale;\n}\n\n\npublic function get generatedCommand():Boolean\n{\n    return __generatedCommand;\n}\n\npublic function set generatedCommand(value:Boolean):void\n{\n    __generatedCommand = value;\n}\n\npublic function get x():Number { return __location.x}\npublic function get y():Number { return __location.y}\n\npublic function get unitID():int\n{\n    return __unitID;\n}\n\npublic function set unitID(value:int):void\n{\n    __unitID = value;\n}\n\npublic function get lineLength():Number\n{\n    return __lineLength;\n}\n\npublic function set lineLength(value:Number):void\n{\n    __lineLength = value;\n}\n\npublic function get prevCommand():WwDrawingHistoryBrushCommand\n{\n    return __prevCommand;\n}\n\npublic function set prevCommand(value:WwDrawingHistoryBrushCommand):void\n{\n    __prevCommand = value;\n}\n\npublic function get rendered():Boolean\n{\n    return __rendered;\n}\n\npublic function set rendered(value:Boolean):void\n{\n    __rendered = value;\n}\n\n// Update Methods\n\npublic function updateBrushId(value:String):String\n{\n    if (value) { __brushID = value; return value }\n    else { return __brushID }\n}\n\npublic function updateUintColor(value:uint):uint\n{\n    if (value) { __uintColor = value; return value }\n    else { return __uintColor }\n}\n\npublic function updateUnitID(value:int):int\n{\n    if (value) { __unitID = value; return value }\n    else { return __unitID }\n}\n\npublic function updateLayerID(value:String):String\n{\n    if (value) { __layerID = value; return value }\n    else { return __layerID }\n}\n\npublic function updateExecutionTime(value:int):int\n{\n    if (value >= 0) { __executionTime = value; return value }\n    else { return __executionTime }\n}\n\npublic function updateBrushScale(value:Number):Number\n{\n    if (value) { __brushScale = value; return value }\n    else { return __brushScale }\n}\n\npublic function updateBlendMode(value:String):String\n{\n    if (value) { __brushBlendMode = value; return value }\n    else { return __brushBlendMode }\n}\n\npublic function updateBrushAlpha(value:Number):Number\n{\n    if (value) { __brushAlpha = value; return value }\n    else { return __brushAlpha }\n}\n\npublic function updateBrushRotation(value:Number):Number\n{\n    if (value) { __brushRotation = value; return value }\n    else { return __brushRotation }\n}\n\npublic function updateX(value:int):int\n{\n    if (!location) { location = new Point(0,0); }\n\n    if (value) { __location.x = value; return value }\n    else { return __location.x }\n}\n\npublic function updateY(value:int):int\n{\n    if (!location) { location = new Point(0,0); }\n\n    if (value) { __location.y = value; return value }\n    else { return __location.y }\n}\n\n\n//Redundancy Methods\n\npublic function checkRedundancyOfBrushID(data_object:Object, property:String, value:String):void\n{\n    if (value == __brushID) { }\nelse { __brushID = value; data_object[property] = __brushID }\n}\n\npublic function checkRedundancyOfUintColor(data_object:Object, property:String, value:uint):void\n{\n    if (value == __uintColor) { }\nelse { __uintColor = value; data_object[property] = __uintColor }\n}\n\npublic function checkRedundancyOfUnitID(data_object:Object, property:String, value:int):void\n{\n    if (value == __unitID) { }\nelse { __unitID = value; data_object[property] = __unitID }\n}\n\npublic function checkRedundancyOfLayerID(data_object:Object, property:String, value:String):void\n{\n    if (value == __layerID) { }\nelse { __layerID = value; data_object[property] = __layerID }\n}\n\npublic function checkRedundancyOfExecutionTime(data_object:Object, property:String, value:int):void\n{\n    //always include time parameter. SAR:150619\n    if (false && value == __executionTime) { }\nelse { __executionTime = value; data_object[property] = __executionTime }\n}\n\npublic function checkRedundancyOfBrushScale(data_object:Object, property:String, value:Number):void\n{\n    if (value == __brushScale) { }\nelse { __brushScale = value; data_object[property] = __brushScale }\n}\n\npublic function checkRedundancyOfBrushBlendMode(data_object:Object, property:String, value:String):void\n{\n    if (value == __brushBlendMode) { }\nelse { __brushBlendMode = value; data_object[property] = __brushBlendMode }\n}\n\npublic function checkRedundancyOfBrushAlpha(data_object:Object, property:String, value:Number):void\n{\n    if (value == __brushAlpha) { }\nelse { __brushAlpha = value; data_object[property] = __brushAlpha }\n}\n\npublic function checkRedundancyOfBrushRotation(data_object:Object, property:String, value:Number):void\n{\n    if (value == __brushRotation) { }\nelse { __brushRotation = value; data_object[property] = __brushRotation }\n}\n\npublic function checkRedundancyOfGeneratedCommand(data_object:Object, property:String, value:Boolean):void\n{\n    if (value == __generatedCommand) { }\nelse { __generatedCommand = value; data_object[property] = __generatedCommand }\n}\n\npublic function checkRedundancyOfX(data_object:Object, property:String, value:Number):void\n{\n    if (!location) { location = new Point(0,0); }\n\nif (value == __location.x) { }\nelse { __location.x = value; data_object[property] = __location.x }\n}\n\npublic function checkRedundancyOfY(data_object:Object, property:String, value:Number):void\n{\n    if (!location) { location = new Point(0,0); }\n\nif (value == __location.y) { }\nelse { __location.y = value; data_object[property] =  __location.y }\n}\n}\n}\n\n*/\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\nimport { WwDrawingHistoryBrushCommand } from './WwDrawingHistoryBrushCommand';\nimport { WwDeviceInfo } from './WwDeviceInfo';\nimport { Point } from './Point';\n\nexport class WwDrawingHistoryDataTranslator {\n\n    public previousCommandData: WwDrawingHistoryBrushCommand;\n    public drawingScale: number;\n\n    constructor() {\n        this.previousCommandData = new WwDrawingHistoryBrushCommand(\"\", null, 1, 0, 0, 0, \"\", 0, -1,\"\", false);\n        this.drawingScale = 1.0;\n    }\n\n    generateCommandWithDataObject(data_object)\n    {\n        let command: WwDrawingHistoryBrushCommand = new WwDrawingHistoryBrushCommand(\"\", null);\n        command.brushId = this.previousCommandData.updateBrushId(data_object.bid);\n        command.unitId = this.previousCommandData.updateUnitId(data_object.uid);\n        command.layerId = this.previousCommandData.updateLayerId(data_object.lid);\n        command.executionTime = this.previousCommandData.updateExecutionTime(data_object.t);\n        command.uintColor = this.previousCommandData.updateUintColor(data_object.c);\n        command.brushScale = this.previousCommandData.updateBrushScale(data_object.s);\n        command.brushBlendMode = this.previousCommandData.updateBlendMode(data_object.bm);\n        command.brushAlpha = this.previousCommandData.updateBrushAlpha(data_object.a);\n        command.brushRotation = this.previousCommandData.updateBrushRotation(data_object.r);\n        let _x = this.previousCommandData.updateX(data_object.x);\n        let _y = this.previousCommandData.updateY(data_object.y);\n\n        _x = Math.floor(_x * 10)/10;\n        _y = Math.floor(_y * 10)/10;\n\n        let _scale = WwDeviceInfo.instance.assetScaleFactor / this.drawingScale;//  1.0;  // 0.5 for iPad 2\n        command.location = new Point(_x * _scale, _y * _scale);\n\n        return command\n    }\n\n    generateDataObjectWithCommand(command) {\n        var data_object = {};\n\n        this.previousCommandData.checkRedundancyOfBrushId(data_object, \"bid\", command.brushId);\n        this.previousCommandData.checkRedundancyOfUnitId(data_object, \"uid\", command.unitId);\n        this.previousCommandData.checkRedundancyOfLayerId(data_object, \"lid\", command.layerId);\n        this.previousCommandData.checkRedundancyOfExecutionTime(data_object, \"t\", command.executionTime);\n        this.previousCommandData.checkRedundancyOfUintColor(data_object, \"c\", command.uintColor);\n        this.previousCommandData.checkRedundancyOfBrushScale(data_object, \"s\", command.brushScale);\n        this.previousCommandData.checkRedundancyOfBrushBlendMode(data_object, \"bm\", command.brushBlendMode);\n        this.previousCommandData.checkRedundancyOfBrushAlpha(data_object, \"a\", command.brushAlpha);\n        this.previousCommandData.checkRedundancyOfBrushRotation(data_object, \"r\", command.brushRotation);\n        this.previousCommandData.checkRedundancyOfGeneratedCommand(data_object, \"g\", command.generatedCommand);\n        this.previousCommandData.checkRedundancyOfX(data_object, \"x\", command.location.x);\n        this.previousCommandData.checkRedundancyOfY(data_object, \"y\", command.location.y);\n\n        return data_object;\n    }\n}\n\n/*\npackage org.wwlib.drawing\n{\nimport flash.geom.Point;\n\nimport org.wwlib.utils.WwDeviceInfo;\n\n    public class WwDrawingHistoryDataTranslator\n{\n    private var __previousCommandData:WwDrawingHistoryBrushCommand;\n    private var __drawingScale:Number;\n\n    public function WwDrawingHistoryDataTranslator()\n    {\n        __previousCommandData = new WwDrawingHistoryBrushCommand(\"\",null,1,0,0,\"\",-1,0,-1,\"\");\n        __drawingScale = 1.0;\n    }\n\n    public function generateCommandWithDataObject(data_object:Object):WwDrawingHistoryBrushCommand\n    {\n        var command:WwDrawingHistoryBrushCommand = new WwDrawingHistoryBrushCommand(\"\");\n        command.brushID = __previousCommandData.updateBrushId(data_object.bid);\n        command.unitID = __previousCommandData.updateUnitID(data_object.uid);\n        command.layerID = __previousCommandData.updateLayerID(data_object.lid);\n        command.executionTime = __previousCommandData.updateExecutionTime(data_object.t);\n        command.uintColor = __previousCommandData.updateUintColor(data_object.c);\n        command.brushScale = __previousCommandData.updateBrushScale(data_object.s);\n        command.brushBlendMode = __previousCommandData.updateBlendMode(data_object.bm);\n        command.brushAlpha = __previousCommandData.updateBrushAlpha(data_object.a);\n        command.brushRotation = __previousCommandData.updateBrushRotation(data_object.r);\n        var _x:Number = __previousCommandData.updateX(data_object.x);\n        var _y:Number = __previousCommandData.updateY(data_object.y);\n\n        _x = Math.floor(_x * 10)/10;\n        _y = Math.floor(_y * 10)/10;\n\n        var _scale:Number = WwDeviceInfo.instance.assetScaleFactor / __drawingScale;//  1.0;  // 0.5 for iPad 2\n        command.location = new Point(_x * _scale, _y * _scale);\n\n        return command\n    }\n\n    public function generateDataObjectWithCommand(command:WwDrawingHistoryBrushCommand):Object\n    {\n        var data_object:Object = {};\n\n        __previousCommandData.checkRedundancyOfBrushID(data_object, \"bid\", command.brushID);\n        __previousCommandData.checkRedundancyOfUnitID(data_object, \"uid\", command.unitID);\n        __previousCommandData.checkRedundancyOfLayerID(data_object, \"lid\", command.layerID);\n        __previousCommandData.checkRedundancyOfExecutionTime(data_object, \"t\", command.executionTime);\n        __previousCommandData.checkRedundancyOfUintColor(data_object, \"c\", command.uintColor);\n        __previousCommandData.checkRedundancyOfBrushScale(data_object, \"s\", command.brushScale);\n        __previousCommandData.checkRedundancyOfBrushBlendMode(data_object, \"bm\", command.brushBlendMode);\n        __previousCommandData.checkRedundancyOfBrushAlpha(data_object, \"a\", command.brushAlpha);\n        __previousCommandData.checkRedundancyOfBrushRotation(data_object, \"r\", command.brushRotation);\n        __previousCommandData.checkRedundancyOfGeneratedCommand(data_object, \"g\", command.generatedCommand);\n        __previousCommandData.checkRedundancyOfX(data_object, \"x\", command.location.x);\n        __previousCommandData.checkRedundancyOfY(data_object, \"y\", command.location.y);\n\n        return data_object;\n    }\n\n    public function get drawingScale():Number\n    {\n        return __drawingScale;\n    }\n\n    public function set drawingScale(value:Number):void\n    {\n        __drawingScale = value;\n    }\n\n\n}\n}\n*/\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/24/15.\n */\n\nimport { WwDrawingHistory } from './WwDrawingHistory';\nimport { WwDrawingHistoryUnit } from './WwDrawingHistoryUnit';\nimport { WwDrawingHistoryBrushCommand } from './WwDrawingHistoryBrushCommand';\nimport { Point} from './Point';\nconst jsonfile = require('jsonfile');\n\nexport class WwDrawingHistoryLoader {\n\n    public history: WwDrawingHistory;\n\n    constructor() {\n        this.history = null;\n\n    }\n\n    loadAndParseDrawingData(fileUrl: string, callback: any): void {\n        jsonfile.readFile(fileUrl, (err: any, data: any) => {\n            if (err) {\n                callback(err);\n            } else {\n                this.parseDrawingData(data);\n                callback(err, data);\n            }\n        });\n    }\n\n    parseDrawingData(data) {\n        this.history = new WwDrawingHistory();\n        let base_command = new WwDrawingHistoryBrushCommand('hard', new Point(0,0));\n\n        data.units.forEach(unit_data => {\n            let unit = new WwDrawingHistoryUnit();\n            unit.layerId = unit_data.lid;\n            unit.sessionId = unit_data.ses;\n            unit.startTime = unit_data.start;\n            unit.id = unit_data.id;\n\n\n            unit_data.commands.forEach(command_data => {\n                if (!command_data.t) {\n                    command_data.t = 0;\n                }\n                let command = WwDrawingHistoryBrushCommand.clone(base_command, command_data);\n                //console.log(command.toStringMin());\n                unit.addCommand(command);\n                base_command = command;\n            });\n            this.history.addUnit(unit);\n        });\n    }\n}\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\nimport { WwDrawingHistory } from './WwDrawingHistory';\nimport { WwDrawingHistoryUnit } from './WwDrawingHistoryUnit';\nimport { WwDrawingHistoryBrushCommand } from './WwDrawingHistoryBrushCommand';\nimport { WwRenderTextureContext } from './WwRenderTextureContext';\nimport { WwBrush } from './WwBrush';\nimport { Point } from './Point';\nimport { Rect } from './Rect';\n\nexport class WwDrawingHistoryRenderer {\n\n    public history: WwDrawingHistory;\n    public context: CanvasRenderingContext2D | WwRenderTextureContext;\n    public boundingRect: Rect;\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n    public centerDrawing: boolean;\n    public startTime: number;\n    public endTime: number;\n    public time: number;\n    public scale: number;\n    public offset: Point;\n    public brush: WwBrush;\n    public mergedCommandsUnit: WwDrawingHistoryUnit;\n\n    constructor(history, context: CanvasRenderingContext2D | WwRenderTextureContext, bounding_rect=null, center_drawing=false, scale=null, start_time=0, end_time=0) {\n        this.history = history;\n        this.context = context;\n        this.boundingRect = bounding_rect;\n        if (this.boundingRect) {\n            this.x = this.boundingRect.left;\n            this.y = this.boundingRect.top;\n            this.width = this.boundingRect.width;\n            this.height = this.boundingRect.height;\n        }\n        this.centerDrawing = center_drawing;\n        this.startTime = start_time;\n        this.endTime = end_time;\n        this.time = this.startTime;\n\n        this.mergedCommandsUnit = this.history.concatAllCommands();\n        if (this.boundingRect) {\n            this.mergedCommandsUnit.shiftOriginToMinXY();\n            this.mergedCommandsUnit.resetBoundingRect();\n        }\n\n        //console.log(`history bounds: ${this.history.boundingRect.toString()}`);\n        //console.log(`merged unit bounds: ${this.mergedCommandsUnit.boundingRect.toString()}`);\n        //console.log(`${this.mergedCommandsUnit.toString()}`);\n\n        if (scale) {\n            this.scale = scale;\n        } else {\n            this.scale = 1.0;\n            if (this.boundingRect && this.mergedCommandsUnit && this.mergedCommandsUnit.boundingRect) {\n                try {\n                    if (this.mergedCommandsUnit.boundingRect.width > this.mergedCommandsUnit.boundingRect.height) {\n                        if (this.boundingRect.width < this.mergedCommandsUnit.boundingRect.width) {\n                            this.scale = this.boundingRect.width / this.mergedCommandsUnit.boundingRect.width;\n                        }\n                    } else {\n                        if (this.boundingRect.height < this.mergedCommandsUnit.boundingRect.height) {\n                            this.scale = this.boundingRect.height / this.mergedCommandsUnit.boundingRect.height;\n                        }\n                    }\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        }\n        //console.log(` scale: ${this.scale}`);\n\n        this.offset = new Point();\n\n        if (this.boundingRect && this.mergedCommandsUnit && this.mergedCommandsUnit.boundingRect) {\n            //console.log(` updating offset: `);\n            try {\n                this.offset = new Point(this.boundingRect.left - this.mergedCommandsUnit.boundingRect.left, this.boundingRect.top - this.mergedCommandsUnit.boundingRect.top);\n\n                if (this.centerDrawing) {\n                    let scaled_drawing_width = this.mergedCommandsUnit.boundingRect.width * this.scale;\n                    let center_x_offset = (this.boundingRect.width - scaled_drawing_width) / 2;\n                    let scaled_drawing_height = this.mergedCommandsUnit.boundingRect.height * this.scale;\n                    let center_y_offset = (this.boundingRect.height - scaled_drawing_height) / 2;\n                    //console.log(` center_x_offset: ${center_x_offset}, ${this.boundingRect.width} - ${scaled_drawing_width}`);\n                    //console.log(` center_y_offset: ${center_y_offset}, ${this.boundingRect.width} - ${scaled_drawing_height}`);\n                    this.offset.x += center_x_offset;\n                    this.offset.y += center_y_offset;\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        //if (this.boundingRect) {\n        //    console.log(` bounding rect: ${this.boundingRect.toString()}`);\n        //}\n        //console.log(` merged unit bounding rect: ${this.mergedCommandsUnit.boundingRect.toString()}`);\n        //console.log(` offset: ${this.offset.toString()}`);\n\n    }\n\n    get ended() {\n        return !this.mergedCommandsUnit.hasNext();\n    }\n\n    renderCommand(command) {\n\n        command.offset = this.offset;\n        command.scale = this.scale;\n        if (command.prevCommand) {\n            let draw_distance = command.lineLength - command.prevCommand.lineLength;\n            let draw_steps = (draw_distance / 2.0) + 1.0;\n\n            for (let i = draw_steps; i > 0; i--) {\n                let interpolationFactor = i / draw_steps;\n\n                let temp_command = WwDrawingHistoryBrushCommand.clone(command);\n\n                let temp_point = Point.interpolate(command.prevCommand.location, command.location, interpolationFactor);\n                temp_command.location = temp_point;\n                temp_command.generatedCommand = true;\n                this.brush = temp_command.brush;\n                if (this.brush) {\n                    this.brush.draw(this.context);\n                }\n            }\n        } else { //DOT\n            this.brush = command.brush; //WwDrawingBrushManager.instance.getBrushFromBrushId(command.brushId);\n            if (this.brush) {\n                this.brush.draw(this.context);\n            }\n        }\n    }\n\n    renderHistory() {\n        this.mergedCommandsUnit.commands.forEach(command => {\n            this.renderCommand(command);\n        });\n    }\n\n    renderHistoryWithDuration(duration) {\n        //console.log(`renderHistoryWithDuration: ${duration}, time: ${this.time}`);\n        this.renderHistoryWithTimeRange(this.time, this.time + duration);\n    }\n\n    renderHistoryWithTimeRange(start_time, end_time) {\n\n        while (this.mergedCommandsUnit.hasNextInTimeRange(start_time, end_time)) {\n            this.renderCommand(this.mergedCommandsUnit.nextInTimeRange(start_time, end_time));\n        }\n\n        this.time = end_time;\n    }\n}\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 8/13/15.\n */\n\n/**\n * ...\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nimport { Point } from './Point';\nimport { Rect } from './Rect';\nimport { getTimer } from './GetTimer';\nimport { WwDrawingHistoryBrushCommand } from './WwDrawingHistoryBrushCommand';\nimport { WwDrawingHistoryDataTranslator } from './WwDrawingHistoryDataTranslator';\n\nexport class WwDrawingHistoryUnit {\n\n    public id: number;\n    public commands: WwDrawingHistoryBrushCommand[];\n    public timeScale: number;\n    public layerId: string;\n    public lineLength: number;\n    public prevCommand: WwDrawingHistoryBrushCommand;\n    public startTime: number;\n    public duration: number;\n    public sessionId: number;\n\n    public currentCommandIndex: number;\n    public boundingRect: Rect;\n\n    constructor() {\n        this.id = -1;\n        this.commands = [];\n        this.timeScale = 1.0;\n        this.layerId = null;\n        this.lineLength = 0;\n        this.prevCommand = null;\n        this.startTime = 0;\n        this.duration = 0;\n        this.sessionId = 0;\n\n        this.currentCommandIndex = 0;\n        this.boundingRect = null;\n\n        // minX: redundant. for troubleshooting boundingRect issue. should be removed.\n        //this.minX = 0;\n        //this.maxX = 0;\n        //this.minY = 0;\n        //this.maxY = 0;\n    }\n\n    toString()\n    {\n        var result:String = \" Unit: \" + this.id + \": start: \" + this.startTime + \", duration: \" + this.duration + \", end: \" + (this.startTime + this.duration) + \"\\n\";\n        //result += `  ${this.minX}, ${this.maxX}, ${this.minY}, ${this.maxY}\\n`;\n        this.commands.forEach(temp_command => {\n            result += `  Command: ${temp_command.unitId}: ${temp_command.executionTime} (${temp_command.location.x}, ${temp_command.location.y})\\n`;\n        });\n        return result;\n    }\n\n    addCommand(_command, adjust_time_to_unit_time=true, link_prev_command=true)\n    {\n\n        this.commands.push(_command);\n        this.updateBoundingRect(_command);\n\n        if (this.prevCommand)\n        {\n            let point_distance = Point.distance(this.prevCommand.location, _command.location);\n            //console.log(`addCommand: ${point_distance}`);\n\n            this.lineLength += point_distance;\n\n            _command.lineLength = this.lineLength;\n            if (link_prev_command)\n            {\n                _command.prevCommand = this.prevCommand;\n            }\n        } else {\n            this.startTime = _command.executionTime;\n        }\n\n        this.layerId = _command.layerId;\n        this.prevCommand = _command;\n\n        if (!_command.unitId) {\n            _command.unitId = this.id;\n        }\n\n        if (adjust_time_to_unit_time)\n        {\n            _command.executionTime -= this.startTime;\n        }\n\n        this.duration = Math.max(this.duration, _command.executionTime);\n    }\n\n    shiftOriginToMinXY() {\n        this.commands.forEach(command => {\n            command.location.x -= this.boundingRect.left; //this.minX;\n            command.location.y -= this.boundingRect.top; //this.minY;\n        });\n    }\n\n    resetBoundingRect() {\n        this.boundingRect = null;\n        this.commands.forEach(command => {\n            this.updateBoundingRect(command);\n        });\n    }\n\n    updateBoundingRect(command) {\n        if (!this.boundingRect) {\n            this.boundingRect = new Rect(command.location.y, command.location.x, 0, 0);\n            //this.minX = this.maxX = command.location.x;\n            //this.minY = this.maxY = command.location.y;\n            //console.log(`  init boundingRect: ${this.boundingRect.toString()}`);\n        } else {\n            this.boundingRect.expandToIncludePoint(command.location);\n            //this.minX = Math.min(this.minX, command.location.x);\n            //this.maxX = Math.max(this.maxX, command.location.x);\n            //this.minY = Math.min(this.minY, command.location.y);\n            //this.maxY = Math.max(this.maxY, command.location.y);\n        }\n    }\n\n    sortComandsByExecutionTime()\n    {\n        this.commands = this.commands.sort(this.sortCompareExecutionTime);\n    }\n\n    sortCompareExecutionTime(_command1, _command2)\n    {\n        return _command1.executionTime - _command2.executionTime;\n    }\n\n    get json()\n    {\n        let json: any = {};\n        json.id = this.id;\n        json.start = this.startTime;\n        json.dur = this.duration;\n        json.end = this.startTime + this.duration;\n        json.lid = this.layerId;\n        json.ses = this.sessionId;\n\n        var _commands = [];\n\n        var dataTranslator = new WwDrawingHistoryDataTranslator();\n\n        this.commands.forEach(_command => {\n\n            var data_object:Object;\n            data_object = dataTranslator.generateDataObjectWithCommand(_command);\n            _commands.push(data_object);//(_command.json);\n        });\n\n        json.commands = _commands;\n\n        return json;\n    }\n\n    hasNext() {\n        return (this.currentCommandIndex + 1) < this.commands.length;\n    }\n\n    hasNextInTimeRange(start_time, end_time) {\n        let next_command = null;\n        let next_command_index = this.currentCommandIndex + 1;\n\n        if (next_command_index < this.commands.length) {\n            next_command =  this.commands[next_command_index];\n            let next_command_time = next_command.executionTime;\n            if (next_command_time >= start_time && next_command_time < end_time) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    next() {\n        let next_command = null;\n\n        this.currentCommandIndex++;\n        if (this.currentCommandIndex < this.commands.length) {\n            next_command = this.commands[this.currentCommandIndex];\n        }\n        return next_command;\n    }\n\n    nextInTimeRange(start_time, end_time) {\n        let next_command = null;\n        let next_command_index = this.currentCommandIndex + 1;\n\n        if (next_command_index < this.commands.length) {\n            next_command =  this.commands[next_command_index];\n            let next_command_time = next_command.executionTime;\n            if (next_command_time >= start_time && next_command_time < end_time) {\n                this.currentCommandIndex++;\n            } else {\n                next_command = null;\n            }\n        }\n        return next_command;\n    }\n\n}\n\n/*\n\n package org.wwlib.drawing\n {\n import flash.geom.Point;\n import flash.utils.getTimer;\n\n import org.wwlib.utils.WwDebug;\n\n\npublic class WwDrawingHistoryUnit\n{\n    private var __debug:WwDebug;\n    private var __id:int = -1;\n    private var __commands:Vector.<WwDrawingHistoryBrushCommand>;\n    private var __timeScale:Number = 1.0;\n    private var __layerID:String;\n    private var __lineLength:Number = 0;\n    private var __prevCommand:WwDrawingHistoryBrushCommand = null;\n    private var __startTime:int = 0;\n    private var __duration:int = 0;\n    private var __sessionID:int = 0;\n\n    private var __json:Object = null;\n\n    public function WwDrawingHistoryUnit()\n    {\n        __debug = WwDebug.instance;\n        __commands = new Vector.<WwDrawingHistoryBrushCommand>;\n    }\n\n    public function addCommand(_command:WwDrawingHistoryBrushCommand, adjust_time_to_unit_time:Boolean=true, link_prev_command:Boolean=true):void\n    {\n        if (__startTime == 0)\n        {\n            __startTime = getTimer();\n        }\n        __commands.push(_command);\n        if (__prevCommand)\n        {\n            __lineLength += Point.distance(__prevCommand.location, _command.location);\n            _command.lineLength = __lineLength;\n            if (link_prev_command)\n            {\n                _command.prevCommand = __prevCommand;\n            }\n        }\n        __layerID = _command.layerID;\n        __prevCommand = _command;\n\n        if (adjust_time_to_unit_time)\n        {\n            _command.executionTime -= __startTime;\n        }\n\n        __duration = Math.max(__duration, _command.executionTime);\n    }\n\n    public static function MERGE_UNITS(_unit1:WwDrawingHistoryUnit, _unit2:WwDrawingHistoryUnit):WwDrawingHistoryUnit\n    {\n        var _merged_unit:WwDrawingHistoryUnit = new WwDrawingHistoryUnit();\n        var temp_command:WwDrawingHistoryBrushCommand;\n\n        for each (temp_command in _unit1.commands)\n        {\n            _merged_unit.addCommand(temp_command);\n        }\n\n        for each (temp_command in _unit2.commands)\n        {\n            _merged_unit.addCommand(temp_command);\n        }\n\n        return _merged_unit;\n    }\n\n    public function debugTime():String\n    {\n        var result:String = \" Unit: \" + __id + \": start: \" + __startTime + \", duration: \" + duration + \", end: \" + (__startTime + duration) + \"\\n\";\n        for each (var temp_command:WwDrawingHistoryBrushCommand in __commands)\n        {\n            result += temp_command.debugTime();\n        }\n        return result;\n    }\n\n    public function sortComandsByExecutionTime():void\n    {\n        __commands = __commands.sort(sortCompareExecutionTime);\n    }\n\n    public function sortCompareExecutionTime(_command1:WwDrawingHistoryBrushCommand, _command2:WwDrawingHistoryBrushCommand):Number\n    {\n        return _command1.executionTime - _command2.executionTime;\n    }\n\n    public function filterCommandsByLayerID(_layerID):WwDrawingHistoryUnit\n    {\n        var _filtered_unit:WwDrawingHistoryUnit = new WwDrawingHistoryUnit();\n        var temp_command:WwDrawingHistoryBrushCommand;\n\n        for each (temp_command in __commands)\n        {\n            if (temp_command.layerID == _layerID)\n            {\n                _filtered_unit.addCommand(temp_command);\n            }\n        }\n\n        return _filtered_unit;\n    }\n\n    public function get commands():Vector.<WwDrawingHistoryBrushCommand>\n{\n        return __commands\n}\n\npublic function dispose():void\n{\n    for each (var _command:WwDrawingHistoryBrushCommand in __commands)\n    {\n        _command.dispose();\n    }\n    __commands = null;\n}\n\npublic function get startTime():int {return __startTime}\npublic function set startTime(_time:int):void\n{\n    __startTime = _time;\n}\n\npublic function get scaledStartTime():int\n{\n    return startTime * __timeScale;\n}\n\npublic function get duration():int\n{\n    if (__duration ==0)\n    {\n        var _end_time:int = 0;\n        for each (var _command:WwDrawingHistoryBrushCommand in __commands)\n        {\n            _end_time = Math.max(_end_time, _command.executionTime);\n        }\n        __duration = _end_time;\n        return __duration;\n    }\n    else\n    {\n        return __duration;\n    }\n\n}\n\npublic function set duration(_time:int):void\n{\n    __duration = _time;\n}\n\npublic function get scaledDuration():int\n{\n    return duration * __timeScale;\n}\n\npublic function get timeScale():Number\n{\n    return __timeScale;\n}\n\npublic function set timeScale(value:Number):void\n{\n    __timeScale = value;\n    for each (var _command:WwDrawingHistoryBrushCommand in __commands)\n    {\n        _command.timeScale = __timeScale;\n    }\n}\n\npublic function get json():Object\n{\n    __json = new Object();\n    __json.id = __id;\n    __json.start = startTime;\n    __json.dur = duration;\n    __json.end = startTime + duration;\n    __json.lid = __layerID;\n    __json.ses = __sessionID;\n\n    var _commands:Array = new Array();\n\n    var dataTranslator:WwDrawingHistoryDataTranslator = new WwDrawingHistoryDataTranslator();\n\n\n    for each (var _command:WwDrawingHistoryBrushCommand in __commands)\n    {\n        var data_object:Object;\n        data_object = dataTranslator.generateDataObjectWithCommand(_command);\n        _commands.push(data_object);//(_command.json);\n    }\n\n    __json.commands = _commands;\n\n    return __json;\n}\n\npublic function get layerID():String\n{\n    return __layerID;\n}\n\npublic function set layerID(value:String):void\n{\n    __layerID = value;\n}\n\npublic function get id():int\n{\n    return __id;\n}\n\npublic function set id(value:int):void\n{\n    __id = value;\n}\n\npublic function get lineLength():Number\n{\n    return __lineLength;\n}\n\npublic function set lineLength(value:Number):void\n{\n    __lineLength = value;\n}\n\npublic function get prevCommand():WwDrawingHistoryBrushCommand\n{\n    return __prevCommand;\n}\n\npublic function set prevCommand(value:WwDrawingHistoryBrushCommand):void\n{\n    __prevCommand = value;\n}\n\npublic function get sessionID():int\n{\n    return __sessionID;\n}\n\npublic function set sessionID(value:int):void\n{\n    __sessionID = value;\n}\n\n\n}\n}\n */\n","export class WwRenderTextureContext {\n\n    public renderer: any; //PIXI.WebGLRenderer;\n    public rt: any; //PIXI.RenderTexture;\n\n    constructor(renderer: any, rt: any) { // PIXI.WebGLRenderer, rt: PIXI.RenderTexture) {\n        this.renderer = renderer;\n        this.rt = rt;\n    }\n\n    render(container: any) :void { // PIXI.Container) :void {\n        this.renderer.render(container, this.rt, false);\n    }\n}\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\n import { WwRenderTextureContext } from './WwRenderTextureContext';\n\n/**\n * @author Andrew Rapo (andrew@worthwhilegames.org)\n * @license MIT\n */\n\nexport class WwSprite {\n\n    static BASE_SCALE_FACTOR: number = 0.5;\n    static SPRITE_STAGE: any = {};\n\n    public x: number;\n    public y: number;\n    public mode:string;\n    public width: number;\n    public height: number;\n    public pivotX: number;\n    public pivotY: number;\n    public scale: number;\n    public rotation: number;\n    public alpha: number;\n\n    public sourceX: number;\n    public sourceY: number;\n\n    public img = null;\n    public pixijsSprite = null;\n    public scaleFactor = WwSprite.BASE_SCALE_FACTOR;\n    public url: string;\n    public PIXI: any;\n\n    private _onReadyCallback: any;\n\n    constructor(x = 0, y = 0, mode='canvas', PIXI?: any) {\n        this.x = x;\n        this.y = y;\n        this.mode = mode;\n        this.PIXI = PIXI;\n        this.width = 0;\n        this.height = 0;\n        this.pivotX = 0;\n        this.pivotY = 0;\n        this.scale = 1.0;\n        this.rotation = 0;\n        this.alpha = 1.0;\n\n        this.sourceX = 0;\n        this.sourceY = 0;\n\n        this.img = null;\n        this.pixijsSprite = null;\n        this.scaleFactor = WwSprite.BASE_SCALE_FACTOR;\n        this.url = \"\";\n\n        this._onReadyCallback = null;\n    }\n\n    toString() {\n        return `WwSprite: (${this.x}, ${this.y}): url: ${this.url}, mode: ${this.mode}`;\n    }\n\n    loadImageWithURL(url) {\n        this.loadImageWithURLAndCallback(url, null);\n    }\n\n    loadImageWithURLAndCallback(url, callback) {\n        //this.log(`WwSprite: load: ${url}`);\n\n        this.url = url;\n        this._onReadyCallback = callback;\n\n        if ((this.url != null) && (this.url != \"\")) {\n            this.url = url;\n\n            if (this.mode === 'canvas') {\n                var temp_img = new Image();\n\n                temp_img.onload = (e => {\n                    //console.log(`Sprite: onLoad: ${e}`);\n                    this.img = temp_img;\n                    this.width = temp_img.width;\n                    this.height = temp_img.height;\n\n                    this.onReady();\n                });\n\n                temp_img.src = url;\n            } else if (this.mode === 'pixijs') {\n                if (!this.PIXI) {\n                    console.log(`WwSprite: loadImageWithURLAndCallback: PIXI must be defined in 'pixijs' mode!`);\n                } else {\n                    let loader = new this.PIXI.loaders.Loader()\n                        .add(url)\n                        .once('complete', (loader, resources) =>\n                        {\n                            //console.log(`Load complete:`);\n                            //console.log(this);\n                            //console.log(resources);\n                            this.pixijsSprite = this.PIXI.Sprite.fromImage(this.url);\n                            this.onReady();\n                        })\n                        .load();\n                }\n            }\n        } else {\n            this.onReady();\n        }\n    }\n\n    set onReadyCallback(callback)\n    {\n        this._onReadyCallback = callback;\n    }\n\n    // Override this\n    onReady()\n    {\n        //this.log(`onReady:  ${this.url}`);\n        if (this._onReadyCallback != null)\n        {\n            this._onReadyCallback(this);\n        }\n\n        this._onReadyCallback = null;\n    }\n\n    // draw(context: CanvasRenderingContext2D): void;\n    // draw(context: WwRenderTextureContext): void;\n    draw(context: WwRenderTextureContext | CanvasRenderingContext2D): void {\n        if (context instanceof CanvasRenderingContext2D) {\n            if (this.img) {\n                context.globalAlpha = this.alpha;\n                context.drawImage(\n                    this.img,\n                    this.sourceX,\n                    this.sourceY,\n                    this.width,\n                    this.height,\n                    this.x - (this.pivotX * this.scale),\n                    this.y - (this.pivotY * this.scale),\n                    this.width * this.scale,\n                    this.height * this.scale\n                );\n            } else {\n                this.fill(context);\n            }\n        } else if (context instanceof WwRenderTextureContext) {\n            this.pixijsSprite.x = this.x;\n            this.pixijsSprite.y = this.y;\n            this.pixijsSprite.scale.x = this.scale;\n            this.pixijsSprite.scale.y = this.scale;\n            this.pixijsSprite.anchor.x = 0.5;\n            this.pixijsSprite.anchor.y = 0.5;\n\n            let container = new this.PIXI.Container();\n            container.addChild(this.pixijsSprite);\n            context.render(container);\n        }\n    }\n\n    // draw(context) {\n    //\n    //     if (this.mode === 'canvas') {\n    //\n    //         if (this.img) {\n    //             context.globalAlpha = this.alpha;\n    //             context.drawImage(\n    //                 this.img,\n    //                 this.sourceX,\n    //                 this.sourceY,\n    //                 this.width,\n    //                 this.height,\n    //                 this.x - (this.pivotX * this.scale),\n    //                 this.y - (this.pivotY * this.scale),\n    //                 this.width * this.scale,\n    //                 this.height * this.scale\n    //             );\n    //         } else {\n    //             this.fill(context);\n    //         }\n    //     } else if (this.mode === 'pixijs') {\n    //         //console.log(`WwSprite: pixijs: draw: ${this.x}, ${this.y}`);\n    //         this.pixijsSprite.x = this.x;\n    //         this.pixijsSprite.y = this.y;\n    //         this.pixijsSprite.scale.x = this.scale;\n    //         this.pixijsSprite.scale.y = this.scale;\n    //         this.pixijsSprite.anchor.x = 0.5;\n    //         this.pixijsSprite.anchor.y = 0.5;\n    //\n    //         let container = new PIXI.Container();\n    //         container.addChild(this.pixijsSprite);\n    //         context.render(container);\n    //     }\n    // }\n\n    fill(context) {\n        context.fillStyle = \"#999999\";\n        context.fillRect(this.x, this.y, this.width, this.height);\n    }\n\n    centerPivot() {\n        if (this.img)\n        {\n            //TODO: Assumes square image\n            let brush_size = this.width * this.scale;\n            let mid_point = brush_size / 2.0;\n\n            this.pivotX = mid_point;\n            this.pivotY = mid_point;\n        }\n    }\n\n    log(msg) {\n        console.log(`WwSprite: ${msg}`);\n    }\n}\n\n/*\n package org.wwlib.starling\n {\n\n import flash.display.Bitmap;\n import flash.display.Loader;\n import flash.display.MovieClip;\n import flash.events.Event;\n import flash.net.URLRequest;\n import flash.system.ImageDecodingPolicy;\n import flash.system.LoaderContext;\n\n import org.wwlib.utils.WwDebug;\n\n import starling.display.Image;\n import starling.display.Sprite;\n\n\n public class WwSprite extends Sprite\n {\n public static var __baseScaleFactor:Number = 0.5;\n public static var FLASH_STAGE:flash.display.MovieClip;\n\n protected var __img:Image;\n protected var __x:int;\n protected var __y:int;\n protected var __bmp:Bitmap;\n protected var __debug:WwDebug = WwDebug.instance;\n protected var __scaleFactor:Number = WwSprite.__baseScaleFactor;\n protected var __url:String;\n\n protected var __onReadyCallback:Function;\n\n public function WwSprite()\n {\n\n }\n\n public function loadImage(url:String):void\n {\n __url = url;\n if ((__url != null) && (__url != \"\"))\n {\n // create a LoaderContext\n var loaderContext:LoaderContext = new LoaderContext();\n // specify async decoding\n loaderContext.imageDecodingPolicy = ImageDecodingPolicy.ON_LOAD;\n // create a Loader\n var loader:Loader = new Loader();\n // inform the Loader\n loader.contentLoaderInfo.addEventListener(Event.COMPLETE,onImageLoaded);\n loader.load( new URLRequest(url), loaderContext );\n }\n else\n {\n onReady();\n }\n }\n\n protected function onImageLoaded(event:Event):void\n {\n //__debug.msg(\"onImageLoaded: \"+ __url);\n __bmp = event.target.content as Bitmap;\n removeChild(__img);\n __img = Image.fromBitmap(__bmp);\n resetScale();\n //__img.alpha = 0.5;\n addChild(__img);\n __bmp = null;\n onReady();\n }\n\n public function resetScale():void\n {\n __img.scaleX = __scaleFactor;\n __img.scaleY = __scaleFactor;\n }\n\n // Override this\n public function onReady():void\n {\n //__debug.msg(\"onReady: \" + __url);\n if (__onReadyCallback != null)\n {\n __onReadyCallback(__url);\n }\n }\n\n public function set image(img:Image):void\n {\n __img = img;\n }\n\n public function get image():Image\n {\n return __img;\n }\n\n public function get url():String\n {\n return __url;\n }\n\n public function set onReadyCallback(f:Function):void\n {\n __onReadyCallback = f;\n }\n\n public function clearImg():void\n {\n removeChild(__img);\n __img = null;\n\n }\n\n public override function dispose():void\n {\n removeChild(__img);\n __img = null;\n super.dispose();\n }\n }\n\n }\n */\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 7/7/15.\n */\n\nexport { Point } from './Point';\nexport { Rect } from './Rect';\nexport { getTimer } from './GetTimer';\nexport { WwSprite } from './WwSprite';\nexport { WwBrush } from './WwBrush';\nexport { WwDrawingHistoryBrushCommand } from './WwDrawingHistoryBrushCommand';\nexport { WwDeviceInfo } from './WwDeviceInfo';\nexport { WwDrawingHistoryUnit } from './WwDrawingHistoryUnit';\nexport { WwDrawingBrushManager } from './WwDrawingBrushManager';\nexport { WwDrawingHistory } from './WwDrawingHistory';\nexport { WwDrawingHistoryRenderer } from './WwDrawingHistoryRenderer';\nexport { WwDrawingHistoryLoader } from './WwDrawingHistoryLoader';\nexport { WwRenderTextureContext } from './WwRenderTextureContext';\n\nconsole.log(\"ww-draw module loaded.\");\n","/**\n * Created by andrew rapo (andrew@worthwhilegames.org) on 6/3/15.\n */\n\nexport default class Vector2 {\n\n    static degrees: number = 180 / Math.PI;\n    public x: number;\n    public y: number;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.set(x, y);\n    }\n\n    valid() {\n        return true;\n    }\n\n    set(x, y) {\n        this.x = x || 0.0;\n        this.y = y || 0.0;\n        return this;\n    }\n\n    setWithVector(vector) {\n        this.x = vector.x || 0.0;\n        this.y = vector.y || 0.0;\n        return this;\n    }\n\n    add(vector) {\n        this.x += vector.x;\n        this.y += vector.y;\n        return this;\n    }\n\n    subtract(vector) {\n        this.x -= vector.x;\n        this.y -= vector.y;\n        return this;\n    }\n\n    diff(vector) {\n        var diff_x = vector.x - this.x;\n        var diff_y = vector.y - this.y;\n        return new Vector2(diff_x, diff_y);\n    }\n\n    mult(vector) {\n        this.x *= vector.x;\n        this.y *= vector.y;\n        return this;\n    }\n\n    scale(scalar) {\n        this.x *= scalar;\n        this.y *= scalar;\n        return this;\n    }\n\n    div(scalar) {\n        this.x /= scalar;\n        this.y /= scalar;\n        return this;\n    }\n\n    dot(vector) {\n        return this.x * vector.x + this.y * vector.y;\n    }\n\n    min(vector) {\n        this.x = Math.min(this.x, vector.x);\n        this.y = Math.min(this.y, vector.y);\n        return this;\n    }\n\n    max(vector) {\n        this.x = Math.max(this.x, vector.x);\n        this.y = Math.max(this.y, vector.y);\n        return this;\n    }\n\n    lt(vector) {\n        return this.x < vector.x || this.y < vector.y;\n    }\n\n    gt(vector) {\n        return this.x > vector.x || this.y > vector.y;\n    }\n\n    get magnitude() {\n        let aa_plus_bb = this.x * this.x + this.y * this.y;\n        return Math.sqrt(aa_plus_bb);\n    }\n\n\n    normalize() {\n        let mag = this.magnitude;\n        if (mag !== 0) {\n            this.x /= mag;\n            this.y /= mag;\n        }\n    }\n\n    clone() {\n        return new Vector2(this.x, this.y);\n    }\n\n    toString() {\n        return `(${this.x}, ${this.y})`;\n    }\n\n////// BORROWED FROM VICTOR\n////// TODO: use matrix2 for rotation\n\n    horizontalAngle() {\n        return Math.atan2(this.y, this.x);\n    }\n\n    horizontalAngleDeg() {\n        return this.radian2degrees(this.horizontalAngle());\n    }\n\n    verticalAngle() {\n        return Math.atan2(this.x, this.y);\n    }\n\n    verticalAngleDeg() {\n        return this.radian2degrees(this.verticalAngle());\n    }\n\n    rotate(angle) {\n        var nx = (this.x * Math.cos(angle)) - (this.y * Math.sin(angle));\n        var ny = (this.x * Math.sin(angle)) + (this.y * Math.cos(angle));\n\n        this.x = nx;\n        this.y = ny;\n\n        return this;\n    }\n\n    rotateDeg(angle) {\n        angle = this.degrees2radian(angle);\n        return this.rotate(angle);\n    }\n\n    /*\n    rotateBy(rotation) {\n        var angle = this.angle() + rotation;\n\n        return this.rotate(angle);\n    }\n\n    rotateByDeg(rotation) {\n        rotation = degrees2radian(rotation);\n        return this.rotateBy(rotation);\n    }\n    */\n\n    random(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    radian2degrees(rad) {\n        return rad * Vector2.degrees;\n    }\n\n    degrees2radian(deg) {\n        return deg / Vector2.degrees;\n    }\n\n}\n","module.exports = require(\"assert\");","module.exports = require(\"constants\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"util\");"],"sourceRoot":""}